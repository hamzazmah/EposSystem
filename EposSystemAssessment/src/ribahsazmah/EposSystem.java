/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ribahsazmah;

import java.awt.Component;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.util.ArrayList;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPasswordField;
import javax.swing.JTextField;
import javax.swing.Timer; 

/**
 *
 * @author Hamza
 */
public class EposSystem extends javax.swing.JFrame {
    Users theUser = new Users();
    Products theProduct = new Products();
    Sales sale = new Sales();
    //Products And Sales Data handler declared
    Users_Data_Handler myUserDataHandler = new Users_Data_Handler();
    Products_Data_Handler myProductsDataHandler = new Products_Data_Handler();
    Sales_Data_Handler mySalesDataHandler = new Sales_Data_Handler();
    //Arraylist to store all the product buttons
    ArrayList<JButton> buttons = new ArrayList<>();
    //Arraylist to store textFields for key listners number and price
    ArrayList<JTextField> textFieldsPrice = new ArrayList<>();
    ArrayList<JTextField> textFieldsNumber = new ArrayList<>();
    //Global Variables to hold Total Sale Value, Qty, Cash and Change
    public static double totalSaleValue;
    public static int totalQty;
    public static double change;
    public static double cash;
    public static String chk;
    public static String saleEmployeeNumber;
    public static String userLoggedIn;//Store User Role
    //Declaring Logic
    Logic logic = new Logic();
    
    /**
     * Creates new form EposSystem
     */
    public EposSystem() 
    {
        
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTitle = new javax.swing.JLabel();
        tabPanelMain = new javax.swing.JTabbedPane();
        pnlOrder = new javax.swing.JPanel();
        btnProduct1 = new javax.swing.JButton();
        btnProduct2 = new javax.swing.JButton();
        btnProduct3 = new javax.swing.JButton();
        btnProduct4 = new javax.swing.JButton();
        btnProduct5 = new javax.swing.JButton();
        btnProduct6 = new javax.swing.JButton();
        btnProduct7 = new javax.swing.JButton();
        btnProduct8 = new javax.swing.JButton();
        btnProduct9 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtAreaSubTotal = new javax.swing.JTextArea();
        lblQuantity = new javax.swing.JLabel();
        btnSubTotal = new javax.swing.JButton();
        btnClearSale = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtAreaCheckout = new javax.swing.JTextArea();
        btnAmount1 = new javax.swing.JButton();
        btnAmount2 = new javax.swing.JButton();
        btnAmount3 = new javax.swing.JButton();
        btnAmount4 = new javax.swing.JButton();
        btnCheckout = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txtOrderProductName = new javax.swing.JTextField();
        jScrollPane9 = new javax.swing.JScrollPane();
        txtAreaOrderProductDescription = new javax.swing.JTextArea();
        txtOrderPrice = new javax.swing.JTextField();
        lblOrderInfo1 = new javax.swing.JLabel();
        pnlOrderProductImage = new javax.swing.JPanel();
        lblOrderProductImage = new javax.swing.JLabel();
        txtFormatEnterAmount = new javax.swing.JFormattedTextField();
        txtFormatedEnterQuantity = new javax.swing.JFormattedTextField();
        pnlProducts = new javax.swing.JPanel();
        pnlCrudProducts = new javax.swing.JTabbedPane();
        pnlCreateProducts = new javax.swing.JPanel();
        lblScreenPosition = new javax.swing.JLabel();
        lblProductName = new javax.swing.JLabel();
        lblProductDescription = new javax.swing.JLabel();
        lblPrice = new javax.swing.JLabel();
        lblImageFilename = new javax.swing.JLabel();
        txtScreenPosition = new javax.swing.JTextField();
        txtProductName = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtAreaProductDescription = new javax.swing.JTextArea();
        txtImageFileName = new javax.swing.JTextField();
        btnCreateProduct = new javax.swing.JButton();
        lblCatagory = new javax.swing.JLabel();
        txtCatagory = new javax.swing.JTextField();
        txtPrice = new javax.swing.JTextField();
        txtProductID = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        lblRoleEx4 = new javax.swing.JLabel();
        lblRoleEx5 = new javax.swing.JLabel();
        lblRoleEx6 = new javax.swing.JLabel();
        lblRoleEx7 = new javax.swing.JLabel();
        pnlReadProducts = new javax.swing.JPanel();
        cmbReadProducts = new javax.swing.JComboBox<>();
        lblReadScreenPosition = new javax.swing.JLabel();
        txtReadScreenPosition = new javax.swing.JTextField();
        lblReadProductName = new javax.swing.JLabel();
        txtReadProductName = new javax.swing.JTextField();
        lblReadProductDescription = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        txtAreaReadProductDescription = new javax.swing.JTextArea();
        lblReadPrice = new javax.swing.JLabel();
        txtReadPrice = new javax.swing.JTextField();
        lblReadImageFilename = new javax.swing.JLabel();
        txtReadImageFileName = new javax.swing.JTextField();
        lblReadProducts = new javax.swing.JLabel();
        lblReadProductId = new javax.swing.JLabel();
        txtReadProductId = new javax.swing.JTextField();
        lblReadCatagory = new javax.swing.JLabel();
        txtReadCatagory = new javax.swing.JTextField();
        pnlCategories = new javax.swing.JPanel();
        lblSubTitle1 = new javax.swing.JLabel();
        lblOrderInfo2 = new javax.swing.JLabel();
        btnCatagory1 = new javax.swing.JButton();
        btnCatagory2 = new javax.swing.JButton();
        btnCatagory3 = new javax.swing.JButton();
        lblOrderProductName1 = new javax.swing.JLabel();
        txtCategoryProductName = new javax.swing.JTextField();
        lblOrderProductDescription1 = new javax.swing.JLabel();
        jScrollPane10 = new javax.swing.JScrollPane();
        txtAreaCategoryProductDescription = new javax.swing.JTextArea();
        lblOrderPrice1 = new javax.swing.JLabel();
        txtCategoryPrice = new javax.swing.JTextField();
        cmbCatagory = new javax.swing.JComboBox<>();
        pnlUpdateProducts = new javax.swing.JPanel();
        lblUpdateProducts = new javax.swing.JLabel();
        cmbUpdateProducts = new javax.swing.JComboBox<>();
        lblUpdateScreenPosition = new javax.swing.JLabel();
        txtUpdateScreenPosition = new javax.swing.JTextField();
        lblUpdateProductName = new javax.swing.JLabel();
        txtUpdateProductName = new javax.swing.JTextField();
        lblUpdateProductDescription = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        txtAreaUpdateProductDescription = new javax.swing.JTextArea();
        lblUpdatePrice = new javax.swing.JLabel();
        txtUpdatePrice = new javax.swing.JTextField();
        lblUpdateImageFilename = new javax.swing.JLabel();
        txtUpdateImageFileName = new javax.swing.JTextField();
        btnUpdateProduct = new javax.swing.JButton();
        lblUpdateReadScreenPosition = new javax.swing.JLabel();
        txtUpdateReadScreenPosition = new javax.swing.JTextField();
        lblUpdateReadProductName = new javax.swing.JLabel();
        txtUpdateReadProductName = new javax.swing.JTextField();
        lblUpdateReadProductDescription = new javax.swing.JLabel();
        jScrollPane7 = new javax.swing.JScrollPane();
        txtUpdateAreaReadProductDescription = new javax.swing.JTextArea();
        lblUpdateReadPrice = new javax.swing.JLabel();
        txtUpdateReadPrice = new javax.swing.JTextField();
        lblUpdateReadImageFilename = new javax.swing.JLabel();
        txtUpdateReadImageFileName = new javax.swing.JTextField();
        lblUpdateReadCatagory = new javax.swing.JLabel();
        txtUpdateReadCatagory = new javax.swing.JTextField();
        lblUpdateCatagory = new javax.swing.JLabel();
        txtUpdateCatagory = new javax.swing.JTextField();
        pnlDeleteProducts = new javax.swing.JPanel();
        lblDeleteProducts = new javax.swing.JLabel();
        cmbDeleteProducts = new javax.swing.JComboBox<>();
        lblDeleteScreenPosition = new javax.swing.JLabel();
        txtDeleteScreenPosition = new javax.swing.JTextField();
        lblDeleteProductName = new javax.swing.JLabel();
        txtDeleteProductName = new javax.swing.JTextField();
        lblDeleteProductDescription = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        txtAreaDeleteProductDescription = new javax.swing.JTextArea();
        lblDeletePrice = new javax.swing.JLabel();
        txtDeletePrice = new javax.swing.JTextField();
        lblDeleteImageFilename = new javax.swing.JLabel();
        txtDeleteImageFileName = new javax.swing.JTextField();
        btnDeleteProduct = new javax.swing.JButton();
        lblDeleteCatagory = new javax.swing.JLabel();
        txtDeleteCatagory = new javax.swing.JTextField();
        pnlUsers = new javax.swing.JPanel();
        pnlCrudUsers = new javax.swing.JTabbedPane();
        pnlCreateUsers = new javax.swing.JPanel();
        lblEmployeeNumber = new javax.swing.JLabel();
        lblFirstName = new javax.swing.JLabel();
        lblLastName = new javax.swing.JLabel();
        lblPassword = new javax.swing.JLabel();
        lblRole = new javax.swing.JLabel();
        txtEmployeeNumber = new javax.swing.JTextField();
        txtFirstname = new javax.swing.JTextField();
        txtLastName = new javax.swing.JTextField();
        txtPassword = new javax.swing.JTextField();
        txtRole = new javax.swing.JTextField();
        btnCreateUser = new javax.swing.JButton();
        lblRoleEx = new javax.swing.JLabel();
        lblRoleEx1 = new javax.swing.JLabel();
        pnlReadUsers = new javax.swing.JPanel();
        cmbReadUsers = new javax.swing.JComboBox<>();
        lblReadUsers = new javax.swing.JLabel();
        lblReadEmployeeNumber = new javax.swing.JLabel();
        txtReadEmployeeNumber = new javax.swing.JTextField();
        lblReadFirstName = new javax.swing.JLabel();
        txtReadFirstname = new javax.swing.JTextField();
        lblReadLastName = new javax.swing.JLabel();
        txtReadLastName = new javax.swing.JTextField();
        lblReadPassword = new javax.swing.JLabel();
        txtReadPassword = new javax.swing.JTextField();
        lblReadRole = new javax.swing.JLabel();
        txtReadRole = new javax.swing.JTextField();
        lblReadUserId = new javax.swing.JLabel();
        txtReadUserId = new javax.swing.JTextField();
        pnlUpdateUsers = new javax.swing.JPanel();
        lblUpdateUsers = new javax.swing.JLabel();
        cmbUpdateUsers = new javax.swing.JComboBox<>();
        lblUpdateReadEmployeeNumber = new javax.swing.JLabel();
        txtUpdateReadEmployeeNumber = new javax.swing.JTextField();
        lblUpdateReadFirstName = new javax.swing.JLabel();
        txtUpdateReadFirstname = new javax.swing.JTextField();
        lblUpdateReadLastName = new javax.swing.JLabel();
        txtUpdateReadLastName = new javax.swing.JTextField();
        lblUpdateReadPassword = new javax.swing.JLabel();
        txtUpdateReadPassword = new javax.swing.JTextField();
        lblUpdateReadRole = new javax.swing.JLabel();
        txtUpdateReadRole = new javax.swing.JTextField();
        lblUpdateEmployeeNumber = new javax.swing.JLabel();
        txtUpdateEmployeeNumber = new javax.swing.JTextField();
        lblUpdateFirstName = new javax.swing.JLabel();
        txtUpdateFirstname = new javax.swing.JTextField();
        lblUpdateLastName = new javax.swing.JLabel();
        txtUpdateLastName = new javax.swing.JTextField();
        lblUpdatePassword = new javax.swing.JLabel();
        txtUpdatePassword = new javax.swing.JTextField();
        lblUpdateRole = new javax.swing.JLabel();
        txtUpdateRole = new javax.swing.JTextField();
        btnUpdateUser = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        txtUpdateUserID = new javax.swing.JTextField();
        pnlDeleteUsers = new javax.swing.JPanel();
        lblDeleteUsers = new javax.swing.JLabel();
        cmbDeleteUsers = new javax.swing.JComboBox<>();
        lblDeleteUserId = new javax.swing.JLabel();
        txtDeleteUserId = new javax.swing.JTextField();
        lblDeleteEmployeeNumber = new javax.swing.JLabel();
        txtDeleteEmployeeNumber = new javax.swing.JTextField();
        lblDeleteFirstName = new javax.swing.JLabel();
        txtDeleteFirstname = new javax.swing.JTextField();
        lblDeleteLastName = new javax.swing.JLabel();
        txtDeleteLastName = new javax.swing.JTextField();
        lblDeleteRole = new javax.swing.JLabel();
        txtDeleteRole = new javax.swing.JTextField();
        btnDeleteUser = new javax.swing.JButton();
        pnlEndOfDay = new javax.swing.JPanel();
        lblSales = new javax.swing.JLabel();
        cmbSales = new javax.swing.JComboBox<>();
        lblEODEmployeeNumber = new javax.swing.JLabel();
        lblSaleValue = new javax.swing.JLabel();
        txtEODEmployeeNumber = new javax.swing.JTextField();
        txtSaleValue = new javax.swing.JTextField();
        lblMax = new javax.swing.JLabel();
        lblMin = new javax.swing.JLabel();
        lblAverage = new javax.swing.JLabel();
        lblTotal = new javax.swing.JLabel();
        txtMax = new javax.swing.JTextField();
        txtMin = new javax.swing.JTextField();
        txtAverage = new javax.swing.JTextField();
        txtTotal = new javax.swing.JTextField();
        btnEODCalculate = new javax.swing.JButton();
        btnEODClearSales = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        txtEODCustomersServed = new javax.swing.JTextField();
        btnLogOut = new javax.swing.JButton();
        lblUser = new javax.swing.JLabel();
        txtUser = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Epos System");
        setBackground(new java.awt.Color(0, 0, 0));
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        lblTitle.setFont(new java.awt.Font("Dialog", 1, 48)); // NOI18N
        lblTitle.setForeground(new java.awt.Color(153, 0, 0));
        lblTitle.setText("Epos System");

        tabPanelMain.setForeground(new java.awt.Color(255, 255, 255));

        pnlOrder.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        pnlOrder.add(btnProduct1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 100, 121, 65));
        pnlOrder.add(btnProduct2, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 100, 121, 65));
        pnlOrder.add(btnProduct3, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 100, 122, 65));
        pnlOrder.add(btnProduct4, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 210, 122, 65));
        pnlOrder.add(btnProduct5, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 210, 122, 65));
        pnlOrder.add(btnProduct6, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 210, 122, 65));
        pnlOrder.add(btnProduct7, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 320, 122, 65));
        pnlOrder.add(btnProduct8, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 320, 122, 65));
        pnlOrder.add(btnProduct9, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 320, 122, 65));

        txtAreaSubTotal.setColumns(20);
        txtAreaSubTotal.setFont(new java.awt.Font("DialogInput", 1, 12)); // NOI18N
        txtAreaSubTotal.setForeground(new java.awt.Color(0, 0, 0));
        txtAreaSubTotal.setRows(5);
        jScrollPane1.setViewportView(txtAreaSubTotal);

        pnlOrder.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 12, 311, 280));

        lblQuantity.setFont(new java.awt.Font("DialogInput", 0, 12)); // NOI18N
        lblQuantity.setText("ⓘ Quantity");
        pnlOrder.add(lblQuantity, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 60, -1, -1));

        btnSubTotal.setText("Sub Total");
        btnSubTotal.setFocusable(false);
        btnSubTotal.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnSubTotal.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        pnlOrder.add(btnSubTotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 300, 148, 70));

        btnClearSale.setText("Clear Sale");
        btnClearSale.setFocusable(false);
        btnClearSale.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnClearSale.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnClearSale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearSaleActionPerformed(evt);
            }
        });
        pnlOrder.add(btnClearSale, new org.netbeans.lib.awtextra.AbsoluteConstraints(1070, 300, 151, 70));

        txtAreaCheckout.setColumns(20);
        txtAreaCheckout.setFont(new java.awt.Font("DialogInput", 1, 12)); // NOI18N
        txtAreaCheckout.setForeground(new java.awt.Color(0, 0, 0));
        txtAreaCheckout.setRows(5);
        jScrollPane2.setViewportView(txtAreaCheckout);

        pnlOrder.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 584, 310, 193));

        btnAmount1.setText("£1");
        btnAmount1.setFocusable(false);
        btnAmount1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnAmount1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        pnlOrder.add(btnAmount1, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 370, 150, 70));

        btnAmount2.setText("£5");
        btnAmount2.setFocusable(false);
        btnAmount2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnAmount2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        pnlOrder.add(btnAmount2, new org.netbeans.lib.awtextra.AbsoluteConstraints(1072, 370, 150, 70));

        btnAmount3.setText("£10");
        btnAmount3.setFocusable(false);
        btnAmount3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnAmount3.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        pnlOrder.add(btnAmount3, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 440, 150, 70));

        btnAmount4.setText("£20");
        btnAmount4.setFocusable(false);
        btnAmount4.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnAmount4.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        pnlOrder.add(btnAmount4, new org.netbeans.lib.awtextra.AbsoluteConstraints(1072, 440, 150, 70));

        btnCheckout.setText("CheckOut");
        btnCheckout.setFocusable(false);
        btnCheckout.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnCheckout.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        pnlOrder.add(btnCheckout, new org.netbeans.lib.awtextra.AbsoluteConstraints(1072, 514, 150, 60));

        jLabel1.setFont(new java.awt.Font("DialogInput", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("Products");
        pnlOrder.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 10, -1, -1));
        pnlOrder.add(txtOrderProductName, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 550, 240, 40));

        txtAreaOrderProductDescription.setColumns(20);
        txtAreaOrderProductDescription.setRows(5);
        jScrollPane9.setViewportView(txtAreaOrderProductDescription);

        pnlOrder.add(jScrollPane9, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 590, 240, 110));
        pnlOrder.add(txtOrderPrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 700, 240, 60));

        lblOrderInfo1.setText("ⓘ Choose the Quantity and the product you want to Add.");
        pnlOrder.add(lblOrderInfo1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 60, -1, -1));

        lblOrderProductImage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/products.jpg"))); // NOI18N

        javax.swing.GroupLayout pnlOrderProductImageLayout = new javax.swing.GroupLayout(pnlOrderProductImage);
        pnlOrderProductImage.setLayout(pnlOrderProductImageLayout);
        pnlOrderProductImageLayout.setHorizontalGroup(
            pnlOrderProductImageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlOrderProductImageLayout.createSequentialGroup()
                .addComponent(lblOrderProductImage)
                .addGap(0, 10, Short.MAX_VALUE))
        );
        pnlOrderProductImageLayout.setVerticalGroup(
            pnlOrderProductImageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlOrderProductImageLayout.createSequentialGroup()
                .addGap(0, 18, Short.MAX_VALUE)
                .addComponent(lblOrderProductImage, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pnlOrder.add(pnlOrderProductImage, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 530, 330, 230));

        txtFormatEnterAmount.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("###0.00"))));
        pnlOrder.add(txtFormatEnterAmount, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 520, 150, 50));

        txtFormatedEnterQuantity.setForeground(new java.awt.Color(0, 0, 0));
        txtFormatedEnterQuantity.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("###0"))));
        txtFormatedEnterQuantity.setFont(new java.awt.Font("DialogInput", 0, 36)); // NOI18N
        pnlOrder.add(txtFormatedEnterQuantity, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 100, 80, 60));

        tabPanelMain.addTab("Order", pnlOrder);

        pnlCrudProducts.setForeground(new java.awt.Color(255, 255, 255));

        lblScreenPosition.setText("Screen Position:");

        lblProductName.setText("Product Name:");

        lblProductDescription.setText("Product Description:");

        lblPrice.setText("Price:");

        lblImageFilename.setText("Image Filename:");

        txtAreaProductDescription.setColumns(20);
        txtAreaProductDescription.setRows(5);
        jScrollPane3.setViewportView(txtAreaProductDescription);

        btnCreateProduct.setForeground(new java.awt.Color(255, 255, 255));
        btnCreateProduct.setText("Create");
        btnCreateProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateProductActionPerformed(evt);
            }
        });

        lblCatagory.setText("Catagory:");

        jLabel3.setText("ProductID:");

        lblRoleEx4.setText("ⓘ Screen Position : Where the Product Button will be Placed");

        lblRoleEx5.setText("ⓘ File Extensions not Needed. Make sure to put the Image File inside Resources Folder.");

        lblRoleEx6.setText("ⓘ Household / Toiletry / Health&Beauty.");

        lblRoleEx7.setText("ⓘ Product ID is not Auto Generated. Input a Number not used before.");

        javax.swing.GroupLayout pnlCreateProductsLayout = new javax.swing.GroupLayout(pnlCreateProducts);
        pnlCreateProducts.setLayout(pnlCreateProductsLayout);
        pnlCreateProductsLayout.setHorizontalGroup(
            pnlCreateProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCreateProductsLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(pnlCreateProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3)
                    .addComponent(lblCatagory)
                    .addGroup(pnlCreateProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(pnlCreateProductsLayout.createSequentialGroup()
                            .addGap(23, 23, 23)
                            .addGroup(pnlCreateProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(lblProductName)
                                .addComponent(lblScreenPosition)))
                        .addGroup(pnlCreateProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblPrice)
                            .addComponent(lblProductDescription)
                            .addComponent(lblImageFilename))))
                .addGap(23, 23, 23)
                .addGroup(pnlCreateProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane3)
                    .addComponent(txtProductName)
                    .addComponent(txtScreenPosition)
                    .addComponent(txtImageFileName)
                    .addComponent(btnCreateProduct)
                    .addComponent(txtCatagory)
                    .addComponent(txtPrice)
                    .addComponent(txtProductID))
                .addGap(18, 18, 18)
                .addGroup(pnlCreateProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblRoleEx6, javax.swing.GroupLayout.PREFERRED_SIZE, 494, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblRoleEx4)
                    .addComponent(lblRoleEx5, javax.swing.GroupLayout.PREFERRED_SIZE, 494, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblRoleEx7))
                .addContainerGap(325, Short.MAX_VALUE))
        );
        pnlCreateProductsLayout.setVerticalGroup(
            pnlCreateProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCreateProductsLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(pnlCreateProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtProductID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblRoleEx7))
                .addGap(33, 33, 33)
                .addGroup(pnlCreateProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlCreateProductsLayout.createSequentialGroup()
                        .addGroup(pnlCreateProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblScreenPosition)
                            .addComponent(txtScreenPosition, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(pnlCreateProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblProductName)
                            .addComponent(txtProductName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(pnlCreateProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlCreateProductsLayout.createSequentialGroup()
                                .addGap(41, 41, 41)
                                .addComponent(lblProductDescription)
                                .addGap(77, 77, 77))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlCreateProductsLayout.createSequentialGroup()
                                .addGap(36, 36, 36)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)))
                        .addGroup(pnlCreateProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(33, 33, 33)
                        .addGroup(pnlCreateProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtImageFileName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblImageFilename)
                            .addComponent(lblRoleEx5)))
                    .addComponent(lblRoleEx4))
                .addGap(23, 23, 23)
                .addGroup(pnlCreateProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCatagory)
                    .addComponent(txtCatagory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblRoleEx6))
                .addGap(15, 15, 15)
                .addComponent(btnCreateProduct)
                .addContainerGap(279, Short.MAX_VALUE))
        );

        pnlCrudProducts.addTab("Create", pnlCreateProducts);

        cmbReadProducts.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbReadProductsActionPerformed(evt);
            }
        });

        lblReadScreenPosition.setText("Screen Position:");

        txtReadScreenPosition.setEnabled(false);

        lblReadProductName.setText("Product Name:");

        txtReadProductName.setEnabled(false);

        lblReadProductDescription.setText("Product Description:");

        txtAreaReadProductDescription.setColumns(20);
        txtAreaReadProductDescription.setRows(5);
        txtAreaReadProductDescription.setEnabled(false);
        jScrollPane4.setViewportView(txtAreaReadProductDescription);

        lblReadPrice.setText("Price:");

        txtReadPrice.setEnabled(false);

        lblReadImageFilename.setText("Image Filename:");

        txtReadImageFileName.setEnabled(false);

        lblReadProducts.setText("Products:");

        lblReadProductId.setText("Product ID:");

        txtReadProductId.setEnabled(false);

        lblReadCatagory.setText("Catagory:");

        txtReadCatagory.setEnabled(false);

        javax.swing.GroupLayout pnlReadProductsLayout = new javax.swing.GroupLayout(pnlReadProducts);
        pnlReadProducts.setLayout(pnlReadProductsLayout);
        pnlReadProductsLayout.setHorizontalGroup(
            pnlReadProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlReadProductsLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(pnlReadProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pnlReadProductsLayout.createSequentialGroup()
                        .addGroup(pnlReadProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblReadProductId)
                            .addGroup(pnlReadProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(pnlReadProductsLayout.createSequentialGroup()
                                    .addGap(23, 23, 23)
                                    .addGroup(pnlReadProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(lblReadProductName)
                                        .addComponent(lblReadScreenPosition)))
                                .addGroup(pnlReadProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblReadPrice)
                                    .addComponent(lblReadProductDescription)
                                    .addComponent(lblReadImageFilename)))
                            .addComponent(lblReadProducts))
                        .addGap(23, 23, 23)
                        .addGroup(pnlReadProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cmbReadProducts, javax.swing.GroupLayout.PREFERRED_SIZE, 356, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(pnlReadProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(txtReadProductId, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txtReadProductName, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txtReadScreenPosition, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txtReadPrice, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txtReadImageFileName, javax.swing.GroupLayout.Alignment.LEADING))))
                    .addGroup(pnlReadProductsLayout.createSequentialGroup()
                        .addComponent(lblReadCatagory)
                        .addGap(23, 23, 23)
                        .addComponent(txtReadCatagory, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(133, 133, 133)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlReadProductsLayout.setVerticalGroup(
            pnlReadProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlReadProductsLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(pnlReadProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbReadProducts, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblReadProducts))
                .addGap(30, 30, 30)
                .addGroup(pnlReadProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblReadProductId)
                    .addComponent(txtReadProductId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addGroup(pnlReadProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblReadScreenPosition)
                    .addComponent(txtReadScreenPosition, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlReadProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblReadProductName)
                    .addComponent(txtReadProductName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(pnlReadProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlReadProductsLayout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addComponent(lblReadProductDescription)
                        .addGap(77, 77, 77))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlReadProductsLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)))
                .addGroup(pnlReadProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblReadPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtReadPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(pnlReadProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtReadImageFileName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblReadImageFilename))
                .addGap(29, 29, 29)
                .addGroup(pnlReadProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtReadCatagory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblReadCatagory))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnlCrudProducts.addTab("Read", pnlReadProducts);

        lblSubTitle1.setFont(new java.awt.Font("DialogInput", 1, 36)); // NOI18N
        lblSubTitle1.setForeground(new java.awt.Color(255, 255, 255));
        lblSubTitle1.setText("Catagories");

        lblOrderInfo2.setText("ⓘ Choose the product and press Add to add it to the basket.");

        btnCatagory1.setText("Health&Beauty");
        btnCatagory1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCatagory1ActionPerformed(evt);
            }
        });

        btnCatagory2.setText("Household");
        btnCatagory2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCatagory2ActionPerformed(evt);
            }
        });

        btnCatagory3.setText("Toiletry");
        btnCatagory3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCatagory3ActionPerformed(evt);
            }
        });

        lblOrderProductName1.setText("Product Name:");

        txtCategoryProductName.setEnabled(false);

        lblOrderProductDescription1.setText("Product Description:");

        txtAreaCategoryProductDescription.setColumns(20);
        txtAreaCategoryProductDescription.setRows(5);
        txtAreaCategoryProductDescription.setEnabled(false);
        jScrollPane10.setViewportView(txtAreaCategoryProductDescription);

        lblOrderPrice1.setText("Price:");

        txtCategoryPrice.setEnabled(false);

        cmbCatagory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbCatagoryActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlCategoriesLayout = new javax.swing.GroupLayout(pnlCategories);
        pnlCategories.setLayout(pnlCategoriesLayout);
        pnlCategoriesLayout.setHorizontalGroup(
            pnlCategoriesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCategoriesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlCategoriesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlCategoriesLayout.createSequentialGroup()
                        .addGroup(pnlCategoriesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlCategoriesLayout.createSequentialGroup()
                                .addGap(32, 32, 32)
                                .addComponent(lblOrderProductName1))
                            .addComponent(lblOrderProductDescription1)
                            .addGroup(pnlCategoriesLayout.createSequentialGroup()
                                .addGap(83, 83, 83)
                                .addComponent(lblOrderPrice1)))
                        .addGap(28, 28, 28)
                        .addGroup(pnlCategoriesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jScrollPane10, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 240, Short.MAX_VALUE)
                            .addComponent(txtCategoryProductName)
                            .addComponent(txtCategoryPrice)))
                    .addGroup(pnlCategoriesLayout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(pnlCategoriesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lblSubTitle1, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblOrderInfo2)
                            .addGroup(pnlCategoriesLayout.createSequentialGroup()
                                .addComponent(btnCatagory1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, 0)
                                .addComponent(btnCatagory2, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(1, 1, 1)
                                .addComponent(btnCatagory3, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(cmbCatagory, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlCategoriesLayout.setVerticalGroup(
            pnlCategoriesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCategoriesLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(lblSubTitle1, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(3, 3, 3)
                .addComponent(lblOrderInfo2)
                .addGap(14, 14, 14)
                .addGroup(pnlCategoriesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnCatagory1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnCatagory2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnCatagory3, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addComponent(cmbCatagory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlCategoriesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlCategoriesLayout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(lblOrderProductName1)
                        .addGap(37, 37, 37)
                        .addComponent(lblOrderProductDescription1)
                        .addGap(78, 78, 78)
                        .addComponent(lblOrderPrice1))
                    .addGroup(pnlCategoriesLayout.createSequentialGroup()
                        .addComponent(txtCategoryProductName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(22, 22, 22)
                        .addComponent(txtCategoryPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnlCrudProducts.addTab("Categories", pnlCategories);

        lblUpdateProducts.setText("Products:");

        cmbUpdateProducts.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbUpdateProductsActionPerformed(evt);
            }
        });

        lblUpdateScreenPosition.setText("Screen Position:");

        lblUpdateProductName.setText("Product Name:");

        lblUpdateProductDescription.setText("Product Description:");

        txtAreaUpdateProductDescription.setColumns(20);
        txtAreaUpdateProductDescription.setRows(5);
        jScrollPane6.setViewportView(txtAreaUpdateProductDescription);

        lblUpdatePrice.setText("Price:");

        lblUpdateImageFilename.setText("Image Filename:");

        btnUpdateProduct.setText("Update");
        btnUpdateProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateProductActionPerformed(evt);
            }
        });

        lblUpdateReadScreenPosition.setText("Screen Position:");

        txtUpdateReadScreenPosition.setEnabled(false);

        lblUpdateReadProductName.setText("Product Name:");

        txtUpdateReadProductName.setEnabled(false);

        lblUpdateReadProductDescription.setText("Product Description:");

        txtUpdateAreaReadProductDescription.setColumns(20);
        txtUpdateAreaReadProductDescription.setRows(5);
        txtUpdateAreaReadProductDescription.setEnabled(false);
        jScrollPane7.setViewportView(txtUpdateAreaReadProductDescription);

        lblUpdateReadPrice.setText("Price:");

        txtUpdateReadPrice.setEnabled(false);

        lblUpdateReadImageFilename.setText("Image Filename:");

        txtUpdateReadImageFileName.setEnabled(false);

        lblUpdateReadCatagory.setText("Catagory:");

        txtUpdateReadCatagory.setEnabled(false);

        lblUpdateCatagory.setText("Catagory:");

        javax.swing.GroupLayout pnlUpdateProductsLayout = new javax.swing.GroupLayout(pnlUpdateProducts);
        pnlUpdateProducts.setLayout(pnlUpdateProductsLayout);
        pnlUpdateProductsLayout.setHorizontalGroup(
            pnlUpdateProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlUpdateProductsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlUpdateProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblUpdateProducts)
                    .addGroup(pnlUpdateProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(pnlUpdateProductsLayout.createSequentialGroup()
                            .addGap(23, 23, 23)
                            .addGroup(pnlUpdateProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(lblUpdateReadProductName)
                                .addComponent(lblUpdateReadScreenPosition)))
                        .addGroup(pnlUpdateProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblUpdateReadPrice)
                            .addComponent(lblUpdateReadProductDescription)
                            .addComponent(lblUpdateReadImageFilename)))
                    .addComponent(lblUpdateReadCatagory))
                .addGap(23, 23, 23)
                .addGroup(pnlUpdateProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlUpdateProductsLayout.createSequentialGroup()
                        .addGroup(pnlUpdateProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtUpdateReadCatagory)
                            .addComponent(jScrollPane7)
                            .addComponent(txtUpdateReadProductName)
                            .addComponent(txtUpdateReadScreenPosition)
                            .addComponent(txtUpdateReadPrice)
                            .addComponent(txtUpdateReadImageFileName))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 349, Short.MAX_VALUE)
                        .addGroup(pnlUpdateProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlUpdateProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(pnlUpdateProductsLayout.createSequentialGroup()
                                    .addGap(23, 23, 23)
                                    .addGroup(pnlUpdateProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(lblUpdateProductName)
                                        .addComponent(lblUpdateScreenPosition)))
                                .addGroup(pnlUpdateProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblUpdatePrice)
                                    .addComponent(lblUpdateProductDescription)
                                    .addComponent(lblUpdateImageFilename)))
                            .addComponent(lblUpdateCatagory, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(23, 23, 23)
                        .addGroup(pnlUpdateProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtUpdateCatagory, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnUpdateProduct)
                            .addGroup(pnlUpdateProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jScrollPane6)
                                .addComponent(txtUpdateProductName)
                                .addComponent(txtUpdateScreenPosition)
                                .addComponent(txtUpdatePrice)
                                .addComponent(txtUpdateImageFileName, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(141, 141, 141))
                    .addGroup(pnlUpdateProductsLayout.createSequentialGroup()
                        .addComponent(cmbUpdateProducts, javax.swing.GroupLayout.PREFERRED_SIZE, 356, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        pnlUpdateProductsLayout.setVerticalGroup(
            pnlUpdateProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlUpdateProductsLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(pnlUpdateProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbUpdateProducts, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblUpdateProducts))
                .addGap(34, 34, 34)
                .addGroup(pnlUpdateProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlUpdateProductsLayout.createSequentialGroup()
                        .addGroup(pnlUpdateProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblUpdateScreenPosition)
                            .addComponent(txtUpdateScreenPosition, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(pnlUpdateProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblUpdateProductName)
                            .addComponent(txtUpdateProductName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(pnlUpdateProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlUpdateProductsLayout.createSequentialGroup()
                                .addGap(41, 41, 41)
                                .addComponent(lblUpdateProductDescription)
                                .addGap(77, 77, 77))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlUpdateProductsLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)))
                        .addGroup(pnlUpdateProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblUpdatePrice, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtUpdatePrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(28, 28, 28)
                        .addGroup(pnlUpdateProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtUpdateImageFileName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblUpdateImageFilename)))
                    .addGroup(pnlUpdateProductsLayout.createSequentialGroup()
                        .addGroup(pnlUpdateProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblUpdateReadScreenPosition)
                            .addComponent(txtUpdateReadScreenPosition, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(pnlUpdateProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblUpdateReadProductName)
                            .addComponent(txtUpdateReadProductName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(pnlUpdateProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlUpdateProductsLayout.createSequentialGroup()
                                .addGap(41, 41, 41)
                                .addComponent(lblUpdateReadProductDescription)
                                .addGap(77, 77, 77))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlUpdateProductsLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)))
                        .addGroup(pnlUpdateProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblUpdateReadPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtUpdateReadPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(28, 28, 28)
                        .addGroup(pnlUpdateProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtUpdateReadImageFileName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblUpdateReadImageFilename))))
                .addGap(32, 32, 32)
                .addGroup(pnlUpdateProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pnlUpdateProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtUpdateReadCatagory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblUpdateReadCatagory))
                    .addGroup(pnlUpdateProductsLayout.createSequentialGroup()
                        .addGroup(pnlUpdateProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtUpdateCatagory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblUpdateCatagory))
                        .addGap(4, 4, 4)))
                .addGap(16, 16, 16)
                .addComponent(btnUpdateProduct)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnlCrudProducts.addTab("Update", pnlUpdateProducts);

        lblDeleteProducts.setText("Products:");

        cmbDeleteProducts.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbDeleteProductsActionPerformed(evt);
            }
        });

        lblDeleteScreenPosition.setText("Screen Position:");

        lblDeleteProductName.setText("Product Name:");

        lblDeleteProductDescription.setText("Product Description:");

        txtAreaDeleteProductDescription.setColumns(20);
        txtAreaDeleteProductDescription.setRows(5);
        jScrollPane5.setViewportView(txtAreaDeleteProductDescription);

        lblDeletePrice.setText("Price:");

        lblDeleteImageFilename.setText("Image Filename:");

        btnDeleteProduct.setText("Delete");
        btnDeleteProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteProductActionPerformed(evt);
            }
        });

        lblDeleteCatagory.setText("Catagory:");

        javax.swing.GroupLayout pnlDeleteProductsLayout = new javax.swing.GroupLayout(pnlDeleteProducts);
        pnlDeleteProducts.setLayout(pnlDeleteProductsLayout);
        pnlDeleteProductsLayout.setHorizontalGroup(
            pnlDeleteProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDeleteProductsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlDeleteProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblDeleteCatagory)
                    .addGroup(pnlDeleteProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(pnlDeleteProductsLayout.createSequentialGroup()
                            .addGap(23, 23, 23)
                            .addGroup(pnlDeleteProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(lblDeleteProductName)
                                .addComponent(lblDeleteScreenPosition)))
                        .addGroup(pnlDeleteProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblDeletePrice)
                            .addComponent(lblDeleteProductDescription)
                            .addComponent(lblDeleteImageFilename)))
                    .addComponent(lblDeleteProducts))
                .addGap(23, 23, 23)
                .addGroup(pnlDeleteProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnDeleteProduct)
                    .addComponent(cmbDeleteProducts, javax.swing.GroupLayout.PREFERRED_SIZE, 356, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnlDeleteProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jScrollPane5)
                        .addComponent(txtDeleteProductName)
                        .addComponent(txtDeleteScreenPosition)
                        .addComponent(txtDeletePrice)
                        .addComponent(txtDeleteImageFileName, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txtDeleteCatagory, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(719, Short.MAX_VALUE))
        );
        pnlDeleteProductsLayout.setVerticalGroup(
            pnlDeleteProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDeleteProductsLayout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(pnlDeleteProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbDeleteProducts, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblDeleteProducts))
                .addGap(34, 34, 34)
                .addGroup(pnlDeleteProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDeleteScreenPosition)
                    .addComponent(txtDeleteScreenPosition, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlDeleteProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDeleteProductName)
                    .addComponent(txtDeleteProductName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(pnlDeleteProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlDeleteProductsLayout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addComponent(lblDeleteProductDescription)
                        .addGap(77, 77, 77))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlDeleteProductsLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)))
                .addGroup(pnlDeleteProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDeletePrice, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDeletePrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(pnlDeleteProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtDeleteImageFileName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblDeleteImageFilename))
                .addGap(18, 18, 18)
                .addGroup(pnlDeleteProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtDeleteCatagory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblDeleteCatagory))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnDeleteProduct)
                .addContainerGap(281, Short.MAX_VALUE))
        );

        pnlCrudProducts.addTab("Delete", pnlDeleteProducts);

        javax.swing.GroupLayout pnlProductsLayout = new javax.swing.GroupLayout(pnlProducts);
        pnlProducts.setLayout(pnlProductsLayout);
        pnlProductsLayout.setHorizontalGroup(
            pnlProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlProductsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlCrudProducts)
                .addContainerGap())
        );
        pnlProductsLayout.setVerticalGroup(
            pnlProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlProductsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlCrudProducts)
                .addContainerGap())
        );

        tabPanelMain.addTab("Products", pnlProducts);

        lblEmployeeNumber.setText("Employee Number:");

        lblFirstName.setText("First Name:");

        lblLastName.setText("Last Name:");

        lblPassword.setText("Password:");

        lblRole.setText("Role:");

        btnCreateUser.setText("Create");
        btnCreateUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateUserActionPerformed(evt);
            }
        });

        lblRoleEx.setText("ⓘ Manager or Employee");

        lblRoleEx1.setText("ⓘ Numbers Only!");

        javax.swing.GroupLayout pnlCreateUsersLayout = new javax.swing.GroupLayout(pnlCreateUsers);
        pnlCreateUsers.setLayout(pnlCreateUsersLayout);
        pnlCreateUsersLayout.setHorizontalGroup(
            pnlCreateUsersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCreateUsersLayout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addGroup(pnlCreateUsersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblEmployeeNumber)
                    .addComponent(lblFirstName, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblLastName, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblPassword, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblRole, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(18, 18, 18)
                .addGroup(pnlCreateUsersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnCreateUser)
                    .addGroup(pnlCreateUsersLayout.createSequentialGroup()
                        .addGroup(pnlCreateUsersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtEmployeeNumber)
                            .addComponent(txtFirstname)
                            .addComponent(txtLastName)
                            .addComponent(txtPassword)
                            .addComponent(txtRole, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(33, 33, 33)
                        .addGroup(pnlCreateUsersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblRoleEx)
                            .addComponent(lblRoleEx1))))
                .addContainerGap(701, Short.MAX_VALUE))
        );
        pnlCreateUsersLayout.setVerticalGroup(
            pnlCreateUsersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCreateUsersLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(pnlCreateUsersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblEmployeeNumber)
                    .addComponent(txtEmployeeNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblRoleEx1))
                .addGap(22, 22, 22)
                .addGroup(pnlCreateUsersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblFirstName)
                    .addComponent(txtFirstname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlCreateUsersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblLastName)
                    .addComponent(txtLastName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlCreateUsersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPassword)
                    .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlCreateUsersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblRole)
                    .addComponent(txtRole, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblRoleEx))
                .addGap(29, 29, 29)
                .addComponent(btnCreateUser)
                .addContainerGap(455, Short.MAX_VALUE))
        );

        pnlCrudUsers.addTab("Create", pnlCreateUsers);

        cmbReadUsers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbReadUsersActionPerformed(evt);
            }
        });

        lblReadUsers.setText("Users:");

        lblReadEmployeeNumber.setText("Employee Number:");

        txtReadEmployeeNumber.setEnabled(false);

        lblReadFirstName.setText("First Name:");

        txtReadFirstname.setEnabled(false);

        lblReadLastName.setText("Last Name:");

        txtReadLastName.setEnabled(false);

        lblReadPassword.setText("Password:");

        txtReadPassword.setEnabled(false);

        lblReadRole.setText("Role:");

        txtReadRole.setEnabled(false);

        lblReadUserId.setText("User ID:");

        txtReadUserId.setEnabled(false);

        javax.swing.GroupLayout pnlReadUsersLayout = new javax.swing.GroupLayout(pnlReadUsers);
        pnlReadUsers.setLayout(pnlReadUsersLayout);
        pnlReadUsersLayout.setHorizontalGroup(
            pnlReadUsersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlReadUsersLayout.createSequentialGroup()
                .addGap(74, 74, 74)
                .addGroup(pnlReadUsersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblReadUserId)
                    .addComponent(lblReadUsers)
                    .addGroup(pnlReadUsersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(lblReadEmployeeNumber)
                        .addComponent(lblReadFirstName, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(lblReadLastName, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(lblReadPassword, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(lblReadRole, javax.swing.GroupLayout.Alignment.TRAILING)))
                .addGap(18, 18, 18)
                .addGroup(pnlReadUsersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cmbReadUsers, javax.swing.GroupLayout.PREFERRED_SIZE, 433, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnlReadUsersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(txtReadUserId, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(txtReadEmployeeNumber, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(txtReadFirstname, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(txtReadLastName, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(txtReadPassword, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(txtReadRole, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 181, Short.MAX_VALUE)))
                .addContainerGap(589, Short.MAX_VALUE))
        );
        pnlReadUsersLayout.setVerticalGroup(
            pnlReadUsersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlReadUsersLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(pnlReadUsersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbReadUsers, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblReadUsers))
                .addGap(18, 18, 18)
                .addGroup(pnlReadUsersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblReadUserId)
                    .addComponent(txtReadUserId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(pnlReadUsersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblReadEmployeeNumber)
                    .addComponent(txtReadEmployeeNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addGroup(pnlReadUsersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblReadFirstName)
                    .addComponent(txtReadFirstname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlReadUsersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblReadLastName)
                    .addComponent(txtReadLastName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlReadUsersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblReadPassword)
                    .addComponent(txtReadPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlReadUsersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblReadRole)
                    .addComponent(txtReadRole, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(438, Short.MAX_VALUE))
        );

        pnlCrudUsers.addTab("Read", pnlReadUsers);

        lblUpdateUsers.setText("Users:");

        cmbUpdateUsers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbUpdateUsersActionPerformed(evt);
            }
        });

        lblUpdateReadEmployeeNumber.setText("Employee Number:");

        txtUpdateReadEmployeeNumber.setEnabled(false);

        lblUpdateReadFirstName.setText("First Name:");

        txtUpdateReadFirstname.setEnabled(false);

        lblUpdateReadLastName.setText("Last Name:");

        txtUpdateReadLastName.setEnabled(false);

        lblUpdateReadPassword.setText("Password:");

        txtUpdateReadPassword.setEnabled(false);

        lblUpdateReadRole.setText("Role:");

        txtUpdateReadRole.setEnabled(false);

        lblUpdateEmployeeNumber.setText("Employee Number:");

        txtUpdateEmployeeNumber.setEnabled(false);

        lblUpdateFirstName.setText("First Name:");

        lblUpdateLastName.setText("Last Name:");

        lblUpdatePassword.setText("Password:");

        lblUpdateRole.setText("Role:");

        btnUpdateUser.setText("Update");
        btnUpdateUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateUserActionPerformed(evt);
            }
        });

        jLabel2.setText("User ID:");

        javax.swing.GroupLayout pnlUpdateUsersLayout = new javax.swing.GroupLayout(pnlUpdateUsers);
        pnlUpdateUsers.setLayout(pnlUpdateUsersLayout);
        pnlUpdateUsersLayout.setHorizontalGroup(
            pnlUpdateUsersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlUpdateUsersLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlUpdateUsersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addComponent(lblUpdateUsers)
                    .addGroup(pnlUpdateUsersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(lblUpdateReadEmployeeNumber)
                        .addComponent(lblUpdateReadFirstName, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(lblUpdateReadLastName, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(lblUpdateReadPassword, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(lblUpdateReadRole, javax.swing.GroupLayout.Alignment.TRAILING)))
                .addGap(18, 18, 18)
                .addGroup(pnlUpdateUsersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cmbUpdateUsers, javax.swing.GroupLayout.PREFERRED_SIZE, 433, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnlUpdateUsersLayout.createSequentialGroup()
                        .addGroup(pnlUpdateUsersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txtUpdateUserID, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtUpdateReadEmployeeNumber, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtUpdateReadFirstname, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtUpdateReadLastName, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtUpdateReadPassword, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtUpdateReadRole, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 181, Short.MAX_VALUE))
                        .addGap(218, 218, 218)
                        .addGroup(pnlUpdateUsersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblUpdateEmployeeNumber)
                            .addComponent(lblUpdateFirstName, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblUpdateLastName, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblUpdatePassword, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblUpdateRole, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(18, 18, 18)
                        .addGroup(pnlUpdateUsersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnUpdateUser)
                            .addGroup(pnlUpdateUsersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtUpdateEmployeeNumber)
                                .addComponent(txtUpdateFirstname)
                                .addComponent(txtUpdateLastName)
                                .addComponent(txtUpdatePassword)
                                .addComponent(txtUpdateRole, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(386, Short.MAX_VALUE))
        );
        pnlUpdateUsersLayout.setVerticalGroup(
            pnlUpdateUsersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlUpdateUsersLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(pnlUpdateUsersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbUpdateUsers, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblUpdateUsers))
                .addGap(21, 21, 21)
                .addGroup(pnlUpdateUsersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtUpdateUserID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlUpdateUsersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pnlUpdateUsersLayout.createSequentialGroup()
                        .addGroup(pnlUpdateUsersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblUpdateReadEmployeeNumber)
                            .addComponent(txtUpdateReadEmployeeNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(22, 22, 22)
                        .addGroup(pnlUpdateUsersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblUpdateReadFirstName)
                            .addComponent(txtUpdateReadFirstname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(pnlUpdateUsersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblUpdateReadLastName)
                            .addComponent(txtUpdateReadLastName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(pnlUpdateUsersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblUpdateReadPassword)
                            .addComponent(txtUpdateReadPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(pnlUpdateUsersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblUpdateReadRole)
                            .addComponent(txtUpdateReadRole, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(pnlUpdateUsersLayout.createSequentialGroup()
                        .addGroup(pnlUpdateUsersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblUpdateEmployeeNumber)
                            .addComponent(txtUpdateEmployeeNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(22, 22, 22)
                        .addGroup(pnlUpdateUsersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblUpdateFirstName)
                            .addComponent(txtUpdateFirstname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(pnlUpdateUsersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblUpdateLastName)
                            .addComponent(txtUpdateLastName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(pnlUpdateUsersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblUpdatePassword)
                            .addComponent(txtUpdatePassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(pnlUpdateUsersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblUpdateRole)
                            .addComponent(txtUpdateRole, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(30, 30, 30)
                .addComponent(btnUpdateUser)
                .addContainerGap(367, Short.MAX_VALUE))
        );

        pnlCrudUsers.addTab("Update", pnlUpdateUsers);

        lblDeleteUsers.setText("Users:");

        cmbDeleteUsers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbDeleteUsersActionPerformed(evt);
            }
        });

        lblDeleteUserId.setText("User ID:");

        txtDeleteUserId.setEnabled(false);

        lblDeleteEmployeeNumber.setText("Employee Number:");

        txtDeleteEmployeeNumber.setEnabled(false);

        lblDeleteFirstName.setText("First Name:");

        txtDeleteFirstname.setEnabled(false);

        lblDeleteLastName.setText("Last Name:");

        txtDeleteLastName.setEnabled(false);

        lblDeleteRole.setText("Role:");

        txtDeleteRole.setEnabled(false);

        btnDeleteUser.setText("Delete");
        btnDeleteUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteUserActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlDeleteUsersLayout = new javax.swing.GroupLayout(pnlDeleteUsers);
        pnlDeleteUsers.setLayout(pnlDeleteUsersLayout);
        pnlDeleteUsersLayout.setHorizontalGroup(
            pnlDeleteUsersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDeleteUsersLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlDeleteUsersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblDeleteUserId)
                    .addComponent(lblDeleteUsers)
                    .addGroup(pnlDeleteUsersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(lblDeleteEmployeeNumber)
                        .addComponent(lblDeleteFirstName, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(lblDeleteLastName, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(lblDeleteRole, javax.swing.GroupLayout.Alignment.TRAILING)))
                .addGap(18, 18, 18)
                .addGroup(pnlDeleteUsersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnDeleteUser)
                    .addComponent(cmbDeleteUsers, javax.swing.GroupLayout.PREFERRED_SIZE, 433, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnlDeleteUsersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(txtDeleteUserId, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(txtDeleteEmployeeNumber, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(txtDeleteFirstname, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(txtDeleteLastName, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(txtDeleteRole, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(657, Short.MAX_VALUE))
        );
        pnlDeleteUsersLayout.setVerticalGroup(
            pnlDeleteUsersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDeleteUsersLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(pnlDeleteUsersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbDeleteUsers, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblDeleteUsers))
                .addGap(18, 18, 18)
                .addGroup(pnlDeleteUsersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDeleteUserId)
                    .addComponent(txtDeleteUserId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(pnlDeleteUsersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDeleteEmployeeNumber)
                    .addComponent(txtDeleteEmployeeNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addGroup(pnlDeleteUsersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDeleteFirstName)
                    .addComponent(txtDeleteFirstname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlDeleteUsersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDeleteLastName)
                    .addComponent(txtDeleteLastName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(pnlDeleteUsersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtDeleteRole, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblDeleteRole))
                .addGap(30, 30, 30)
                .addComponent(btnDeleteUser)
                .addContainerGap(400, Short.MAX_VALUE))
        );

        pnlCrudUsers.addTab("Delete", pnlDeleteUsers);

        javax.swing.GroupLayout pnlUsersLayout = new javax.swing.GroupLayout(pnlUsers);
        pnlUsers.setLayout(pnlUsersLayout);
        pnlUsersLayout.setHorizontalGroup(
            pnlUsersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlUsersLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlCrudUsers)
                .addContainerGap())
        );
        pnlUsersLayout.setVerticalGroup(
            pnlUsersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlUsersLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlCrudUsers)
                .addContainerGap())
        );

        tabPanelMain.addTab("Users", pnlUsers);

        lblSales.setText("Sales:");

        cmbSales.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbSalesActionPerformed(evt);
            }
        });

        lblEODEmployeeNumber.setText("Employee Number:");

        lblSaleValue.setText("Sale Value:");

        txtEODEmployeeNumber.setEnabled(false);

        txtSaleValue.setEnabled(false);

        lblMax.setText("Highest Sale Value:");

        lblMin.setText("Lowest Sale Value:");

        lblAverage.setText("Average Sale Value:");

        lblTotal.setText("Total Sales Value:");

        txtMax.setEnabled(false);

        txtMin.setEnabled(false);

        txtAverage.setEnabled(false);

        txtTotal.setEnabled(false);

        btnEODCalculate.setText("Calculate & Fill");
        btnEODCalculate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEODCalculateActionPerformed(evt);
            }
        });

        btnEODClearSales.setText("Clear All Sales");
        btnEODClearSales.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEODClearSalesActionPerformed(evt);
            }
        });

        jLabel4.setText("Customers Served:");

        txtEODCustomersServed.setEnabled(false);

        javax.swing.GroupLayout pnlEndOfDayLayout = new javax.swing.GroupLayout(pnlEndOfDay);
        pnlEndOfDay.setLayout(pnlEndOfDayLayout);
        pnlEndOfDayLayout.setHorizontalGroup(
            pnlEndOfDayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlEndOfDayLayout.createSequentialGroup()
                .addGap(82, 82, 82)
                .addGroup(pnlEndOfDayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel4)
                    .addComponent(lblTotal)
                    .addComponent(lblAverage)
                    .addComponent(lblMin)
                    .addComponent(lblMax)
                    .addComponent(lblSaleValue)
                    .addComponent(lblEODEmployeeNumber)
                    .addComponent(lblSales))
                .addGap(18, 18, 18)
                .addGroup(pnlEndOfDayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cmbSales, javax.swing.GroupLayout.PREFERRED_SIZE, 345, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnlEndOfDayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(txtEODCustomersServed, javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(pnlEndOfDayLayout.createSequentialGroup()
                            .addComponent(btnEODCalculate)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnEODClearSales))
                        .addComponent(txtSaleValue, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(txtEODEmployeeNumber, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(txtMax, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(txtMin, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(txtAverage, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(txtTotal, javax.swing.GroupLayout.Alignment.LEADING)))
                .addContainerGap(676, Short.MAX_VALUE))
        );
        pnlEndOfDayLayout.setVerticalGroup(
            pnlEndOfDayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlEndOfDayLayout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(pnlEndOfDayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSales)
                    .addComponent(cmbSales, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(42, 42, 42)
                .addGroup(pnlEndOfDayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblEODEmployeeNumber)
                    .addComponent(txtEODEmployeeNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(pnlEndOfDayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSaleValue)
                    .addComponent(txtSaleValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(pnlEndOfDayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtEODCustomersServed, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(pnlEndOfDayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblMax)
                    .addComponent(txtMax, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(46, 46, 46)
                .addGroup(pnlEndOfDayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblMin)
                    .addComponent(txtMin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(51, 51, 51)
                .addGroup(pnlEndOfDayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAverage)
                    .addComponent(txtAverage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(57, 57, 57)
                .addGroup(pnlEndOfDayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTotal)
                    .addComponent(txtTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(pnlEndOfDayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnEODCalculate)
                    .addComponent(btnEODClearSales))
                .addContainerGap(204, Short.MAX_VALUE))
        );

        tabPanelMain.addTab("End of Day", pnlEndOfDay);

        btnLogOut.setText("Exit");
        btnLogOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogOutActionPerformed(evt);
            }
        });

        lblUser.setText("User :");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(tabPanelMain)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(lblTitle)
                        .addGap(282, 282, 282)
                        .addComponent(lblUser)
                        .addGap(18, 18, 18)
                        .addComponent(txtUser, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(44, 44, 44))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnLogOut)
                .addGap(43, 43, 43))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblUser)
                            .addComponent(txtUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(20, 20, 20)))
                .addComponent(tabPanelMain, javax.swing.GroupLayout.PREFERRED_SIZE, 803, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnLogOut)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    //Main Form Actions
    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        checkTheLogin();//Checks the login 
        fillProductCombos();//Fills up the combos with product Id and Name
        productAction();//Checks which product button is pressed and adds it into the list
        addAction();//Checks which checkout button is pressed
        fillSaleCombo();//Fills sales combo box
        txtFieldPriceKeyListners();//Key listner for Price txt
        txtFieldNumberKeyListners();//Key listner for number txt
        fillUserCombos();//Fills all user combos
        addProductsToScreen();//Adds Product Names on the Buttons 
    }//GEN-LAST:event_formWindowOpened
    //Main Form Actions
    
    
    //Category Panel
    private void btnCatagory1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCatagory1ActionPerformed
        cmbCatagory.removeAllItems();
        ArrayList<Products> myList = myProductsDataHandler.getAllProducts();
        myList.forEach((var i) ->
            {
                if (i.getCategory().equals("HealthAndBeauty"))
                {

                    cmbCatagory.addItem(i.getProductId() + " : " + i.getProductName());
                }
            });
    }//GEN-LAST:event_btnCatagory1ActionPerformed

    private void btnCatagory2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCatagory2ActionPerformed
        cmbCatagory.removeAllItems();
        ArrayList<Products> myList = myProductsDataHandler.getAllProducts();
        myList.forEach((var i) ->
            {
                if (i.getCategory().equals("Household"))
                {

                    cmbCatagory.addItem(i.getProductId() + " : " + i.getProductName());
                }
            });
    }//GEN-LAST:event_btnCatagory2ActionPerformed

    private void btnCatagory3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCatagory3ActionPerformed
        cmbCatagory.removeAllItems();
        ArrayList<Products> myList = myProductsDataHandler.getAllProducts();
        myList.forEach((var i) ->
            {
                if (i.getCategory().equals("Toiletry"))
                {

                    cmbCatagory.addItem(i.getProductId() + " : " + i.getProductName());
                }
            });
    }//GEN-LAST:event_btnCatagory3ActionPerformed

    private void cmbCatagoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbCatagoryActionPerformed
        ArrayList<Products> myList = myProductsDataHandler.getAllProducts();
        if (cmbCatagory.getItemCount() > 0)
        {
            myList.forEach((var i) ->
                {
                    String userSelectedProduct = (String)cmbCatagory.getSelectedItem();
                    int getID = checkForMultipleDigits(userSelectedProduct);
                    if (getID == i.getProductId())
                    {
                        txtCategoryProductName.setText(i.getProductName());
                        txtAreaCategoryProductDescription.setText(i.getDescription());
                        double price = i.getPrice();
                        String priceStr = Double.toString(price);
                        txtCategoryPrice.setText("£" + priceStr);
                    }
                });
            }
    }//GEN-LAST:event_cmbCatagoryActionPerformed
    //Category Panel

    
    
    //Order Panel
    //Adds products name to the butons on screen from Database
    public void addProductsToScreen()
    {
        //Add new buutons here
        buttons.add(btnProduct1);
        buttons.add(btnProduct2);
        buttons.add(btnProduct3);
        buttons.add(btnProduct4);
        buttons.add(btnProduct5);
        buttons.add(btnProduct6);
        buttons.add(btnProduct7);
        buttons.add(btnProduct8);
        buttons.add(btnProduct9);
        ArrayList<Products> myList = myProductsDataHandler.getAllProducts();
        
        if (myList.size() == buttons.size())
        {
            //Loop through the products Database
            myList.forEach((var i) ->
            {
                JButton button = buttons.get( i.getScreen() );
                button.setText( i.getProductName() );//Set the product name on the buttons.
            });
        }
        else if (myList.size() > buttons.size() || myList.size() < buttons.size())
        {
            JOptionPane.showMessageDialog(this, "You Have a new product/s which does not have a button associated. Please Create a new button and Add it to Buttons Array list! \nThe System will now Exit.");
        }
        
    }
    
    //This is Button Action listner for product Buttons
    public void productAction()
    {
        timer.stop();
        txtAreaSubTotal.setText("Description - Qty - Price ");
        txtAreaSubTotal.append ("\n**************************");
        txtFormatEnterAmount.setToolTipText("Input Amount Here.");
        txtFormatedEnterQuantity.setToolTipText("Input Quantity Here!");
        txtFormatedEnterQuantity.setValue(1);
        String text = txtFormatedEnterQuantity.getText();
        if (txtFormatedEnterQuantity.getText().isBlank()) 
        {
            JOptionPane.showMessageDialog(this, "The Quantity is Blank!");
            txtFormatedEnterQuantity.grabFocus();
        } 
        else 
        { 
            try
            {
                System.out.println(text);
                double d = Integer.parseInt(text);
                ArrayList<Products> myList = myProductsDataHandler.getAllProducts();
                myList.forEach((var i) ->
                {
                    Component[] components = pnlOrder.getComponents();
                    for(Component component : components)
                    {
                        if(component instanceof JButton) 
                        {
                            JButton button = (JButton) component;
                            button.addActionListener((var e) ->
                            {
                                if (button.getText().equals(i.getProductName()) && !(txtFormatedEnterQuantity.getText().isBlank()))
                                {
                                    cash = 0;
                                    txtAreaSubTotal.append("\n" + i.getProductName() + " - " + txtFormatedEnterQuantity.getText() + " - £" +String.format("%.2f" , i.getPrice()));
                                    txtAreaCheckout.setText("");
                                    int qty = Integer.parseInt(txtFormatedEnterQuantity.getText());
                                    totalQty = totalQty + qty;
                                    if (qty > 0)
                                    {
                                        totalSaleValue = totalSaleValue + (i.getPrice()*qty);
                                    }
                                    String theSelectedImageFilePath = "/resources/" + i.getImageFileName()+ ".jpg";
                                    lblOrderProductImage.setIcon(new javax.swing.ImageIcon(getClass().getResource(theSelectedImageFilePath)));
                                    txtOrderProductName.setText(i.getProductName());
                                    txtAreaOrderProductDescription.setText(i.getDescription());
                                    btnAmount1.setEnabled(false);
                                    btnAmount2.setEnabled(false);
                                    btnAmount3.setEnabled(false);
                                    btnAmount4.setEnabled(false);
                                    btnCheckout.setEnabled(false);
                                    double price = i.getPrice();
                                    String priceStr = Double.toString(price);
                                    txtOrderPrice.setText( "£" + priceStr);
                                    txtFormatedEnterQuantity.setValue(1);
                                    change = 0;
                                    System.out.println(totalQty);
                                    System.out.println(totalSaleValue);
                                }
                            });
                        }
                    }
                });
            }
            catch (NumberFormatException nfe) 
            {
                JOptionPane.showMessageDialog(this, nfe);
            }
        }   
    }     
    
    //Timer to display stuff for some time
    Timer timer = new Timer(1500, new ActionListener() 
        {   
            @Override
            public void actionPerformed(ActionEvent e) 
            {
                // Clear text
                timer.stop();
                setButtonEnableOrDisable(true);
                txtAreaSubTotal.setText("Description - Qty - Price ");
                txtAreaSubTotal.append ("\n**************************");                

            }
        });
        
    //Enable/Disable Buttons
    public void setButtonEnableOrDisable(boolean bool)
    {
        btnProduct1.setEnabled(bool);
        btnProduct2.setEnabled(bool);
        btnProduct3.setEnabled(bool);
        btnProduct4.setEnabled(bool);
        btnProduct5.setEnabled(bool);
        btnProduct6.setEnabled(bool);
        btnProduct7.setEnabled(bool);
        btnProduct8.setEnabled(bool);
        btnProduct9.setEnabled(bool);
        btnAmount1.setEnabled(bool);
        btnAmount2.setEnabled(bool);
        btnAmount3.setEnabled(bool);
        btnAmount4.setEnabled(bool);
        btnSubTotal.setEnabled(bool);
        btnCheckout.setEnabled(bool);
    }
    
    //Button Action for non-product buttons
    public void addAction()
    {
        Component[] components = pnlOrder.getComponents();
        for(Component component : components)
        {
            if(component instanceof JButton)
            {
                JButton button = (JButton) component;
                button.addActionListener((var e) -> 
                {
                        if (button.getText().equals("Clear Sale") && totalSaleValue > 0)
                        {     
                            txtAreaCheckout.setText("");
                            txtFormatedEnterQuantity.setValue(1);
                            txtFormatEnterAmount.setValue(null);
                            
                            setButtonEnableOrDisable(true);
                            System.out.println(totalQty);
                            System.out.println(totalSaleValue);
                        }
                        if (button.getText().equals("Sub Total") && totalSaleValue > 0)
                        {
                            btnAmount1.setEnabled(true);
                            btnAmount2.setEnabled(true);
                            btnAmount3.setEnabled(true);
                            btnAmount4.setEnabled(true);
                            btnCheckout.setEnabled(true);
                            txtAreaCheckout.setText("Total Sale : £" + String.format("%.2f" , totalSaleValue) + " - Total Qty : " + totalQty );
                            chk = txtAreaCheckout.getText();

                        }
                        if (button.getText().equals("£1") && totalSaleValue > 0 )
                        {
                            cash = cash + 1;
                            txtAreaCheckout.setText(chk);
                            txtAreaCheckout.append("\nCash - £" + String.format("%.2f", cash));
                        }
                        if (button.getText().equals("£5") && totalSaleValue > 0 )
                        {
                            cash = cash + 5;
                            txtAreaCheckout.setText(chk);
                            txtAreaCheckout.append("\nCash - £" + String.format("%.2f", cash));
                        }
                        if (button.getText().equals("£10") && totalSaleValue > 0)
                        {
                            cash = cash + 10;
                            txtAreaCheckout.setText(chk);
                            txtAreaCheckout.append("\nCash - £" + String.format("%.2f", cash));
                        }
                        if (button.getText().equals("£20") && totalSaleValue > 0)
                        {
                            cash = cash + 20;
                            txtAreaCheckout.setText(chk);
                            txtAreaCheckout.append("\nCash - £" + String.format("%.2f", cash));
                        }
                        if (!txtFormatEnterAmount.getText().isBlank() && totalSaleValue > 0)
                        {
                            cash = Double.parseDouble(txtFormatEnterAmount.getText());
                            txtAreaCheckout.setText(chk);
                            txtAreaCheckout.append("\nCash - £" + String.format("%.2f", cash));
                        }
                        if (button.getText().equals("CheckOut") && totalSaleValue > 0 && cash > 0 )
                        {
                            change = cash - totalSaleValue;
                            if (change >= 0)
                            {
                                txtAreaSubTotal.append ("\n**************************"); 

                                //Adds the sale value and employee number into databas
                                System.out.println(saleEmployeeNumber);
                                sale.setEmployeeNumber(saleEmployeeNumber);
                                sale.setSaleValue(totalSaleValue);
                                mySalesDataHandler.insertSale(sale);
                                JOptionPane.showMessageDialog(this, "The Sale has been inserted in to the Database.");

                                //Resets the image and details after checkout
                                String theSelectedImageFilePath = "/resources/products.jpg";
                                lblOrderProductImage.setIcon(new javax.swing.ImageIcon(getClass().getResource(theSelectedImageFilePath)));
                                txtOrderPrice.setText("");
                                txtAreaOrderProductDescription.setText("");
                                txtOrderProductName.setText("");

                                //Updates sales combo
                                cmbSales.removeAllItems();
                                fillSaleCombo();
                                //All checkout funtionality
                                if (change > 0)
                                {
                                    txtAreaCheckout.append("\nYour Change is £");
                                    txtAreaCheckout.append(String.format("%.2f", change));
                                    txtAreaCheckout.append("\nThank You for Your Custom!");
                                    setButtonEnableOrDisable(false);
                                }
                                if (change == 0)
                                {
                                    change = totalSaleValue - totalSaleValue;
                                    txtAreaCheckout.append("\nNo Change Due!");
                                    txtAreaCheckout.append("\nThank You for Your Custom!");
                                    setButtonEnableOrDisable(false);
                                }
                            }

                            if (change < 0)
                            {
                                txtAreaCheckout.append("\nCash Not Enough!");
                                txtAreaCheckout.append("\n£" + String.format("%.2f", Math.abs(change)));
                            }
                        }
                        
                });
            }
        } 
    }
    
    //Clear Sale button
    private void btnClearSaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearSaleActionPerformed
        if (totalSaleValue > 0)
        {
            
            txtAreaSubTotal.setText("**************************");
            txtAreaSubTotal.append ("\nSale Cleared!");
            txtAreaSubTotal.append("\n**************************");
            setButtonEnableOrDisable(false);
            timer.start();
            totalQty = 0;
            totalSaleValue = 0;
            change = 0;
            cash = 0;
        }
    }//GEN-LAST:event_btnClearSaleActionPerformed
    //Order Panel
    
    
    
    //End Of Day Sales Panel
    //Sale Panel Combo box actions
    private void cmbSalesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbSalesActionPerformed
        ArrayList<Sales> myList = mySalesDataHandler.getAllSales();
        if (cmbSales.getItemCount() > 0)
        {
            myList.forEach((var i) ->
                {
                    String userSelectedSale = (String)cmbSales.getSelectedItem();
                    int getID = checkForMultipleDigits(userSelectedSale);
                    if (getID == i.getSaleId())
                    {
                        txtSaleValue.setText("£" + String.valueOf(i.getSaleValue()));
                        txtEODEmployeeNumber.setText(i.getEmployeeNumber());
                    }
                });
            }
    }//GEN-LAST:event_cmbSalesActionPerformed

    //Calcualtes and fills combo box
    private void btnEODCalculateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEODCalculateActionPerformed
        if (cmbSales.getItemCount() > 0)
        {
            cmbSales.removeAllItems();
            fillSaleCombo();
            endOfDayOperations();
        }
        else 
        {
            JOptionPane.showMessageDialog(this, "No Data Available to Calculate or Fill!");
        }
    }//GEN-LAST:event_btnEODCalculateActionPerformed

    //Deletes all the sales
    private void btnEODClearSalesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEODClearSalesActionPerformed
        
        if (cmbSales.getItemCount() > 0 && userLoggedIn.equals("Manager"))
        {
            int optionPane = JOptionPane.showConfirmDialog(null, "All Sales Data will be Cleared! ", "Are you Sure?",
                JOptionPane.OK_CANCEL_OPTION,
                JOptionPane.PLAIN_MESSAGE);
            if (optionPane == JOptionPane.YES_OPTION)
            {
                mySalesDataHandler.deleteSales(sale);
                JOptionPane.showMessageDialog(this, "Sales Data cleared Successfully!");
                cmbSales.removeAllItems();
                txtAverage.setText("");
                txtMax.setText("");
                txtMin.setText("");
                txtTotal.setText("");
                txtEODEmployeeNumber.setText("");
                txtSaleValue.setText("");
                txtEODCustomersServed.setText("");
            }   
        }
        else if (cmbSales.getItemCount() <= 0)
        {
            JOptionPane.showMessageDialog(this, "No Sales Data Available to Delete!");
        }
    }//GEN-LAST:event_btnEODClearSalesActionPerformed
    
    //Fills combo box for end of day sales
    public void fillSaleCombo()
    {
        ArrayList<Sales> myList = mySalesDataHandler.getAllSales();
        myList.forEach((var i) ->
        {
            cmbSales.addItem(i.getSaleId() + " : " + i.getEmployeeNumber());
        });    
    }
    
    //End of day Max,Min and Average
    public void endOfDayOperations()
    {
        double totalSales = 0;
        double average;
        
        ArrayList<Double> total = new ArrayList<>();
        ArrayList<Sales> myList = mySalesDataHandler.getAllSales();
        myList.forEach((var i) ->
        {
            total.add(i.getSaleValue());
        });  
        double highest = total.get(0);
        double lowest = total.get(0);
        for (int i = 0; i < total.size(); i++)
        {
            System.out.println(total.get(i));
            totalSales = totalSales + total.get(i);
            if (total.get(i) > highest)
            {
               highest = total.get(i);
            }
            if (total.get(i) < lowest)
            {
                lowest = total.get(i);
            }
        }
        average = totalSales/total.size();
        
        txtEODCustomersServed.setText(String.valueOf(myList.size()));
        txtTotal.setText("£" + String.format("%.2f%n",totalSales));
        txtMax.setText("£" + String.format("%.2f%n",highest));
        txtMin.setText("£" + String.format("%.2f%n",lowest));
        txtAverage.setText("£" + String.format("%.2f%n",average));
        
       
        
        
    }
    //End of Day Sales Panel
   
  
    //Products CURD Panel  
    private void btnCreateProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateProductActionPerformed
        
        boolean idExists = false;
        boolean screenExists = false;
        if ( (txtProductID.getText().equals("")) || (txtScreenPosition.getText().equals("")) || (txtProductName.getText().equals("")) || (txtProductName.getText().equals("")) || (txtAreaProductDescription.getText().equals("")) || (txtPrice.getText().equals("")) || (txtImageFileName.getText().equals("")) || (txtCatagory.getText().equals("")) )
        {
            JOptionPane.showMessageDialog(this, "One or More of the Fields are Empty!");
        }
        else
        {
            ArrayList<Products> myList = myProductsDataHandler.getAllProducts();
            //Loop through the products Database
            for (int i = 0; i < myList.size(); i++)
            {
                if (Integer.valueOf(txtProductID.getText()) == myList.get(i).getProductId())
                {
                    idExists = true;
                }
                
                if (Integer.valueOf(txtScreenPosition.getText()) == myList.get(i).getScreen())
                {
                    screenExists = true;
                }
            }

                if (idExists == false && screenExists == false)
                {
                    theProduct.setProductId(Integer.parseInt(txtProductID.getText()));
                    theProduct.setScreen(Integer.parseInt(txtScreenPosition.getText()));
                    theProduct.setProductName(txtProductName.getText());
                    theProduct.setDescription(txtAreaProductDescription.getText());
                    theProduct.setPrice(Double.parseDouble(txtPrice.getText()));
                    theProduct.setImageFileName(txtImageFileName.getText());  
                    theProduct.setCategory(txtCatagory.getText());

                    myProductsDataHandler.insertProduct(theProduct);


                    JOptionPane.showMessageDialog(this, "The Product has been inserted.");
                    
                    txtProductID.setText("");
                    txtScreenPosition.setText("");
                    txtProductName.setText("");
                    txtAreaProductDescription.setText("");
                    txtPrice.setText("");
                    txtImageFileName.setText("");
                    txtCatagory.setText("");

                    refreshProductCombos();
                }
                else
                {
                    if (idExists == true)
                    {
                        JOptionPane.showMessageDialog(this, "The Product ID Already Exists! ");
                    }
                    if (screenExists == true)
                    {
                        JOptionPane.showMessageDialog(this, "The Screen Position Already Exists! ");
                    } 
                }

        }
    }//GEN-LAST:event_btnCreateProductActionPerformed

    private void cmbReadProductsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbReadProductsActionPerformed
        ArrayList<Products> myList = myProductsDataHandler.getAllProducts();
        if (cmbReadProducts.getItemCount() > 0)
        {
            myList.forEach((var i) ->
                {
                    String userSelectedProduct = (String)cmbReadProducts.getSelectedItem();
                    int getID = checkForMultipleDigits(userSelectedProduct);
                    if (getID == i.getProductId())
                    {
                        txtReadProductId.setText(String.valueOf(i.getProductId()));
                        txtReadPrice.setText("£" + String.format("%.2f%n",i.getPrice()));
                        txtAreaReadProductDescription.setText(i.getDescription());
                        txtReadCatagory.setText(i.getCategory());
                        txtReadImageFileName.setText(i.getImageFileName());
                        txtReadProductName.setText(i.getProductName());
                        txtReadScreenPosition.setText(String.valueOf(i.getScreen()));
                    }
                });
            }
    }//GEN-LAST:event_cmbReadProductsActionPerformed

    private void btnUpdateProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateProductActionPerformed
        ArrayList<Products> myList = myProductsDataHandler.getAllProducts();
        myList.forEach((var i) -> 
        {
            String userSelectedProduct = (String)cmbUpdateProducts.getSelectedItem();
            int getID = checkForMultipleDigits(userSelectedProduct);
            if (getID == i.getProductId())
            {
                System.out.println(getID);
        	if (txtUpdateScreenPosition.getText().equals("") || txtUpdateProductName.getText().equals("") || txtAreaUpdateProductDescription.getText().equals("") || txtUpdateCatagory.getText().equals("") || txtUpdateImageFileName.getText().equals("") || txtUpdatePrice.getText().equals(""))
                {
                    JOptionPane.showMessageDialog(this, "One or More of the Fields are Empty!");
                }
                else
                {
                    theProduct.setProductId(getID);
                    theProduct.setScreen(Integer.valueOf(txtUpdateScreenPosition.getText()));
                    theProduct.setProductName(txtUpdateProductName.getText());
                    theProduct.setDescription(txtAreaUpdateProductDescription.getText());
                    theProduct.setCategory(txtUpdateCatagory.getText());
                    theProduct.setImageFileName(txtUpdateImageFileName.getText());
                    theProduct.setPrice(Double.parseDouble(txtUpdatePrice.getText()));
                    myProductsDataHandler.updateProduct(theProduct);
                    JOptionPane.showMessageDialog(this, "The Product has been Updated!");
                    refreshProductCombos();
                    
                    txtUpdateScreenPosition.setText("");
                    txtUpdatePrice.setText("");
                    txtAreaUpdateProductDescription.setText("");
                    txtUpdateCatagory.setText("");
                    txtUpdateImageFileName.setText("");
                    txtUpdateProductName.setText("");
                }
                
            }
        });
    }//GEN-LAST:event_btnUpdateProductActionPerformed

    private void cmbUpdateProductsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbUpdateProductsActionPerformed
        ArrayList<Products> myList = myProductsDataHandler.getAllProducts();
        if (cmbUpdateProducts.getItemCount() > 0)
        {
            myList.forEach((var i) ->
                {
                    String userSelectedProduct = (String)cmbUpdateProducts.getSelectedItem();
                    int getID = checkForMultipleDigits(userSelectedProduct);
                    if (getID == i.getProductId())
                    {
                        txtUpdateReadScreenPosition.setText(String.valueOf(i.getProductId()));
                        txtUpdateReadPrice.setText("£" + String.format("%.2f%n",i.getPrice()));
                        txtUpdateAreaReadProductDescription.setText(i.getDescription());
                        txtUpdateReadCatagory.setText(i.getCategory());
                        txtUpdateReadImageFileName.setText(i.getImageFileName());
                        txtUpdateReadProductName.setText(i.getProductName());
                        
                        txtUpdateScreenPosition.setText(String.valueOf(i.getProductId()));
                        txtUpdatePrice.setText(String.format("%.2f%n",i.getPrice()));
                        txtAreaUpdateProductDescription.setText(i.getDescription());
                        txtUpdateCatagory.setText(i.getCategory());
                        txtUpdateImageFileName.setText(i.getImageFileName());
                        txtUpdateProductName.setText(i.getProductName());
                    }
                });
            }
    }//GEN-LAST:event_cmbUpdateProductsActionPerformed

    private void cmbDeleteProductsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbDeleteProductsActionPerformed
        ArrayList<Products> myList = myProductsDataHandler.getAllProducts();
        if (cmbDeleteProducts.getItemCount() > 0)
        {
            myList.forEach((var i) ->
                {
                    String userSelectedProduct = (String)cmbDeleteProducts.getSelectedItem();
                    int getID = checkForMultipleDigits(userSelectedProduct);
                    if (getID == i.getProductId())
                    {
                        txtDeleteScreenPosition.setText(String.valueOf(i.getProductId()));
                        txtDeletePrice.setText(String.format("%.2f%n",i.getPrice()));
                        txtAreaDeleteProductDescription.setText(i.getDescription());
                        txtDeleteCatagory.setText(i.getCategory());
                        txtDeleteImageFileName.setText(i.getImageFileName());
                        txtDeleteProductName.setText(i.getProductName());
                    }
                });
            }
    }//GEN-LAST:event_cmbDeleteProductsActionPerformed

    private void btnDeleteProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteProductActionPerformed
        ArrayList<Products> myList = myProductsDataHandler.getAllProducts();
        myList.forEach((i) -> 
        {
            String userSelectedProduct = (String)cmbDeleteProducts.getSelectedItem();
            int getID = checkForMultipleDigits(userSelectedProduct);
            if (getID == i.getProductId())
            {
                myProductsDataHandler.deleteProduct(i);
                JOptionPane.showMessageDialog(this, "The Product has been Deleted!");
                refreshProductCombos();
            }            
        });
    }//GEN-LAST:event_btnDeleteProductActionPerformed
    //Products CURD Panel
    
    
    //System Exit 
    private void btnLogOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogOutActionPerformed
        if (cmbSales.getItemCount() > 0 && userLoggedIn.equals("Manager"))
        {
            int optionPane = JOptionPane.showConfirmDialog(null, "Exiting the App will Clear All Sales Data! ", "Are you Sure?",
                JOptionPane.OK_CANCEL_OPTION,
                JOptionPane.PLAIN_MESSAGE);
            if (optionPane == JOptionPane.YES_OPTION)
            {
                mySalesDataHandler.deleteSales(sale);
                JOptionPane.showMessageDialog(this, "Sales Data cleared Successfully!");
                JOptionPane.showMessageDialog(this, "The System will Now Exit!");
                System.exit(0);
            }   
        }
        else
        {
            JOptionPane.showMessageDialog(this, "The System will Now Exit!");
            System.exit(0);
        }
    }//GEN-LAST:event_btnLogOutActionPerformed
    //System Exit
    
    
    
    //Users CURD Panel
    private void btnCreateUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateUserActionPerformed
        boolean employeeNumberExists = false;
        
        if ( (txtEmployeeNumber.getText().equals("")) || (txtFirstname.getText().equals("")) || (txtLastName.getText().equals("")) || (txtPassword.getText().equals("")) || (txtRole.getText().equals("")) )
        {
            JOptionPane.showMessageDialog(this, "One or More of the Fields are Empty!");
        }
        else
        {
            ArrayList<Users> myList = myUserDataHandler.getAllUsers();
            //Loop through the products Database
            for (int i = 0; i < myList.size(); i++)
            {

                if (txtEmployeeNumber.getText().equals(myList.get(i).getEmployeeNumber()))
                {
                    employeeNumberExists = true;
                }
            }
                if (employeeNumberExists == false)
                {
                    theUser.setEmployeeNumber(txtEmployeeNumber.getText());
                    theUser.setFirstName(txtFirstname.getText());
                    theUser.setLastName(txtLastName.getText());
                    theUser.setPassword(txtPassword.getText());  
                    theUser.setRole(txtRole.getText());

                    myUserDataHandler.insertUser(theUser);


                    JOptionPane.showMessageDialog(this, "The user has been inserted.");
                    
                    txtEmployeeNumber.setText("");
                    txtFirstname.setText("");
                    txtLastName.setText("");
                    txtPassword.setText("");
                    txtRole.setText("");

                    refreshUserCombos();
                }
                else
                {
                    if (employeeNumberExists == true)
                    {
                        JOptionPane.showMessageDialog(this, "The Employee Number Already Exists! ");
                    }
                }

        }
    }//GEN-LAST:event_btnCreateUserActionPerformed

    private void cmbReadUsersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbReadUsersActionPerformed
        ArrayList<Users> myList = myUserDataHandler.getAllUsers();
        if (cmbReadUsers.getItemCount() > 0)
        {
            myList.forEach((var i) ->
                {
                    String userSelectedUser = (String)cmbReadUsers.getSelectedItem();
                    int getID = checkForMultipleDigits(userSelectedUser);
                    if (getID == i.getUserID())
                    {
                        txtReadUserId.setText(String.valueOf(i.getUserID()));
                        txtReadEmployeeNumber.setText(i.getEmployeeNumber());
                        txtReadFirstname.setText(i.getFirstName());
                        txtReadLastName.setText(i.getLastName());
                        txtReadPassword.setText(i.getPassword());
                        txtReadRole.setText(i.getRole());
                    }
                });
            }
    }//GEN-LAST:event_cmbReadUsersActionPerformed

    private void cmbUpdateUsersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbUpdateUsersActionPerformed
        ArrayList<Users> myList = myUserDataHandler.getAllUsers();
        if (cmbUpdateUsers.getItemCount() > 0)
        {
            myList.forEach((var i) ->
                {
                    String userSelectedUser = (String)cmbUpdateUsers.getSelectedItem();
                    int getID = checkForMultipleDigits(userSelectedUser);
                    if (getID == i.getUserID())
                    {
                        txtUpdateUserID.setText(String.valueOf(i.getUserID()));
                        txtUpdateReadEmployeeNumber.setText(i.getEmployeeNumber());
                        txtUpdateReadFirstname.setText(i.getFirstName());
                        txtUpdateReadLastName.setText(i.getLastName());
                        txtUpdateReadPassword.setText(i.getPassword());
                        txtUpdateReadRole.setText(i.getRole());
                        
                        txtUpdateEmployeeNumber.setText(i.getEmployeeNumber());
                        txtUpdateFirstname.setText(i.getFirstName());
                        txtUpdateLastName.setText(i.getLastName());
                        txtUpdatePassword.setText(i.getPassword());
                        txtUpdateRole.setText(i.getRole());
                        
                    }
                });
            }
    }//GEN-LAST:event_cmbUpdateUsersActionPerformed

    private void btnUpdateUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateUserActionPerformed

        ArrayList<Users> myList = myUserDataHandler.getAllUsers();
        if (cmbUpdateUsers.getItemCount() > 0)
        {
            myList.forEach((var i) -> 
            {
                String userSelectedUsers = (String)cmbUpdateUsers.getSelectedItem();
                int getID = checkForMultipleDigits(userSelectedUsers);
                if (getID == i.getUserID())
                {
                    if ((txtUpdateEmployeeNumber.getText().equals("")) || (txtUpdateFirstname.getText().equals("")) || (txtUpdateLastName.getText().equals("")) || (txtUpdatePassword.getText().equals("")) || (txtUpdateRole.getText().equals("")))
                    {
                        JOptionPane.showMessageDialog(this, "One or More of the Fields are Empty!");
                    }
                    else
                    {

                        theUser.setUserID(Integer.valueOf(txtUpdateUserID.getText()));
                        theUser.setEmployeeNumber(txtUpdateEmployeeNumber.getText());
                        theUser.setFirstName(txtUpdateFirstname.getText());
                        theUser.setLastName(txtUpdateLastName.getText());
                        theUser.setPassword(txtUpdatePassword.getText());
                        theUser.setRole(txtUpdateRole.getText());

                        myUserDataHandler.updateUser(theUser);
                        JOptionPane.showMessageDialog(this, "The User has been Updated!");
                        refreshUserCombos();

                        txtUpdateEmployeeNumber.setText("");
                        txtUpdateFirstname.setText("");
                        txtUpdateLastName.setText("");
                        txtUpdatePassword.setText("");
                        txtUpdateRole.setText("");
                    }
                }
            });
        }
    }//GEN-LAST:event_btnUpdateUserActionPerformed

    private void cmbDeleteUsersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbDeleteUsersActionPerformed
        ArrayList<Users> myList = myUserDataHandler.getAllUsers();
        if (cmbDeleteUsers.getItemCount() > 0)
        {
            myList.forEach((var i) ->
                {
                    String userSelectedUser = (String)cmbDeleteUsers.getSelectedItem();
                    int getID = checkForMultipleDigits(userSelectedUser);
                    if (getID == i.getUserID())
                    {
                        txtDeleteEmployeeNumber.setText(i.getEmployeeNumber());
                        txtDeleteFirstname.setText(i.getFirstName());
                        txtDeleteLastName.setText(i.getLastName());
                        txtDeleteUserId.setText(String.valueOf(i.getUserID()));
                        txtDeleteRole.setText(i.getRole()); 
                    }
                });
            }
    }//GEN-LAST:event_cmbDeleteUsersActionPerformed

    private void btnDeleteUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteUserActionPerformed
        ArrayList<Users> myList = myUserDataHandler.getAllUsers();
        if (cmbDeleteUsers.getItemCount() > 0)
        {
            myList.forEach((i) -> 
            {
                String userSelectedUser = (String)cmbDeleteUsers.getSelectedItem();
                int getID = checkForMultipleDigits(userSelectedUser);
                if (getID == i.getUserID())
                {
                    myUserDataHandler.deleteUser(i);
                    JOptionPane.showMessageDialog(this, "The User has been Deleted!");
                    refreshUserCombos();
                }            
            });
        }
    }//GEN-LAST:event_btnDeleteUserActionPerformed
    //Users CURD Panel
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EposSystem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EposSystem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EposSystem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EposSystem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new EposSystem().setVisible(true);
        });
    }
    
    @SuppressWarnings("empty-statement")
    
    
    
    //User Login function
    public void checkTheLogin(){
        
        JLabel lblLogin = new JLabel("Employee Number:");
        JTextField login = new JTextField();
        JLabel lblPassword = new JLabel("Password:");
        JPasswordField password = new JPasswordField();
        
        login.addKeyListener(new KeyListener() {
            @Override
            public void keyTyped(KeyEvent e) 
            {
                char c = e.getKeyChar();
                if(!(Character.isDigit(c)) || c == KeyEvent.VK_BACK_SPACE )
                {
                    e.consume();
                }
            }
            @Override
            public void keyPressed(KeyEvent e) {     
            }
            @Override
            public void keyReleased(KeyEvent e) {     
            }
        }); 
        
        //-----------------------------------------------------
        // store these in an object array
        Object[] login_GUI_Elelemnts = {lblLogin, login, lblPassword, password};
        //-----------------------------------------------------
        int userInteraction = JOptionPane.showConfirmDialog(null, login_GUI_Elelemnts, "Login",
                JOptionPane.OK_CANCEL_OPTION,
                JOptionPane.PLAIN_MESSAGE);
        //this integer variable 'userInteraction' will hold the result of
        //the users interaction with the JOpttionPane
        //we will then test the result against common returned values. OK OPtion , Cancel , Closed
        //-----------------------------------------------------
        if (userInteraction == JOptionPane.OK_OPTION) 
        {
            String user = login.getText().trim(); // user string that the user entered in the textfield
            String myPass = String.valueOf(password.getPassword());
            //String pass = new String(password.getPassword()); //pulls the password string from textfield
            Boolean entryGranted = false;// setup boolean as false.
            saleEmployeeNumber = user;
            theUser = new Users();//Instantiate this user object
            theUser.setPassword(myPass);// Password 
            theUser.setEmployeeNumber(user);//and EmployeeNumber fields of the object using the setters

            System.out.println("The users data is now: " + theUser.toString());

            Users_Data_Handler myUsersHandler = new Users_Data_Handler();//Instantiate a Users Data handler 
            
            if (login.getText().trim().isEmpty() && myPass.trim().isEmpty())
            {
                JOptionPane.showMessageDialog(this, "Field(s) are Empty!");
                checkTheLogin();
            }
            else if (login.getText().trim().isEmpty())
            {
                JOptionPane.showMessageDialog(this, "Employee Number Field is Empty!");
                checkTheLogin();
            }
            else if (myPass.trim().isEmpty())
            {
                JOptionPane.showMessageDialog(this, "Password Field is Empty!");
                checkTheLogin();
            }
            else if (!(login.getText().trim().isEmpty()) && !(myPass.trim().isEmpty()))
            {
            if (myUsersHandler.checkUserIsValid(theUser)) {//you have a valid user you can then use the method getValidUser of the DB Handler
                theUser = myUsersHandler.getValidUser(theUser);
                System.out.println("The users data is now: " + theUser.toString());
            };
            if (theUser.getRole().equals("Employee")) {
                userLoggedIn = theUser.getRole();
                JOptionPane.showMessageDialog(this, "Logged in as Employee\nAdmin panel will be removed");
                //If an Employee logged in then remove the panel tabs that relate to Managers.
                this.tabPanelMain.remove(pnlProducts); //removes the Products CRUD tab
                this.tabPanelMain.remove(pnlUsers); //removes the Users CRUD tab
                this.tabPanelMain.remove(pnlEndOfDay); //removes the EndOfDay tab
                this.tabPanelMain.isShowing();
                txtUser.setText(theUser.getRole() + " - " +theUser.getFirstName());
                entryGranted = true;
            }
            if (theUser.getRole().equals("Manager"))
            {
                userLoggedIn = theUser.getRole();
                JOptionPane.showMessageDialog(this, "Logged in as Manager\nAccess granted to all areas");
                entryGranted = true;
                txtUser.setText(theUser.getRole() + " - " +theUser.getFirstName());
                
            }
            if (!entryGranted) //entry denied
            {
                JOptionPane.showMessageDialog(this, "Entry denied");
                checkTheLogin();
                //userInteraction = JOptionPane.CANCEL_OPTION;
            }
            }
        } 
        else 
        {//user clicked on CANCEL or the X close button- we change the userInteraction to force execution of the CANCEL block of code
            userInteraction = JOptionPane.CANCEL_OPTION;
        }
        if ((userInteraction == JOptionPane.CANCEL_OPTION) || (userInteraction == JOptionPane.CLOSED_OPTION)) // the cancel block of code - if user presses the X or CANCEL
        {
            //feedback to user and close the application as no suitable login credentials have been supplied.
            JOptionPane.showMessageDialog(this, "You have not supplied valid credentials\n the application will now terminate");
            System.exit(0);
        }
    }
    //User Login Function
    
    
    
    //Fills combo boxes for products
    public void fillProductCombos()
    {
       ArrayList<Products> myList = myProductsDataHandler.getAllProducts();
        myList.forEach((var i) ->
        {
            cmbReadProducts.addItem(i.getProductId() + " : " + i.getProductName());
            cmbDeleteProducts.addItem(i.getProductId() + " : " + i.getProductName());
            cmbUpdateProducts.addItem(i.getProductId() + " : " + i.getProductName());
            cmbCatagory.addItem(i.getProductId() + " : " + i.getProductName());
        });    
    }

    //Refresh products combo boxes after update
    public void refreshProductCombos()
    {
        //Refreshes combos when a product is added updated or deleted
        cmbCatagory.removeAllItems();
        cmbDeleteProducts.removeAllItems();
        cmbUpdateProducts.removeAllItems();
        cmbReadProducts.removeAllItems();
        fillProductCombos();
    }

    //Fills User Combos
    public void fillUserCombos()
    {
        ArrayList<Users> userList = myUserDataHandler.getAllUsers();
        userList.forEach((var i) ->
        {
            cmbReadUsers.addItem(i.getUserID()+ " : " + i.getFirstName());
            cmbUpdateUsers.addItem(i.getUserID()+ " : " + i.getFirstName());
            cmbDeleteUsers.addItem(i.getUserID()+ " : " + i.getFirstName());  
        });    
    }
    
    //Refresh User combos after update
    public void refreshUserCombos()
    {
        cmbReadUsers.removeAllItems();
        cmbUpdateUsers.removeAllItems();
        cmbDeleteUsers.removeAllItems();
        fillUserCombos();
    }
    
    //Keylistner Price text fields
     public void txtFieldPriceKeyListners()
    {
        textFieldsPrice.add(txtPrice);
        textFieldsPrice.add(txtUpdatePrice);
        textFieldsPrice.add(txtDeletePrice);
        textFieldsPrice.add(txtFormatEnterAmount);
        logic.txtFieldPriceKeyListners(textFieldsPrice);
    }
    
     //Key Listner Number text fields
    public void txtFieldNumberKeyListners()
    {
        textFieldsNumber.add(txtFormatedEnterQuantity);
        textFieldsNumber.add(txtScreenPosition);
        textFieldsNumber.add(txtUpdateScreenPosition);
        textFieldsNumber.add(txtDeleteScreenPosition);
        textFieldsNumber.add(txtEmployeeNumber);
        textFieldsNumber.add(txtDeleteEmployeeNumber);
        textFieldsNumber.add(txtUpdateEmployeeNumber);
        textFieldsNumber.add(txtProductID);
        logic.txtFieldNumberKeyListners(textFieldsNumber);
    }
   
    //Checks for the first number in the combobox entry
    public int checkForMultipleDigits(String selectedItem)
    {   
        //Gets the product ID of the selected item from the combo box
        int colonIndex = 0;
        for (int i = 0; i < selectedItem.length(); i++) 
        {
           if (selectedItem.charAt(i) == (':'))
           {
               colonIndex = i;
           }
        }
        String finalNumberStr = selectedItem.substring(0, colonIndex-1);
        int finalNumber = Integer.valueOf(finalNumberStr);
        return finalNumber;
    }
    
           
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAmount1;
    private javax.swing.JButton btnAmount2;
    private javax.swing.JButton btnAmount3;
    private javax.swing.JButton btnAmount4;
    private javax.swing.JButton btnCatagory1;
    private javax.swing.JButton btnCatagory2;
    private javax.swing.JButton btnCatagory3;
    private javax.swing.JButton btnCheckout;
    private javax.swing.JButton btnClearSale;
    private javax.swing.JButton btnCreateProduct;
    private javax.swing.JButton btnCreateUser;
    private javax.swing.JButton btnDeleteProduct;
    private javax.swing.JButton btnDeleteUser;
    private javax.swing.JButton btnEODCalculate;
    private javax.swing.JButton btnEODClearSales;
    private javax.swing.JButton btnLogOut;
    private javax.swing.JButton btnProduct1;
    private javax.swing.JButton btnProduct2;
    private javax.swing.JButton btnProduct3;
    private javax.swing.JButton btnProduct4;
    private javax.swing.JButton btnProduct5;
    private javax.swing.JButton btnProduct6;
    private javax.swing.JButton btnProduct7;
    private javax.swing.JButton btnProduct8;
    private javax.swing.JButton btnProduct9;
    private javax.swing.JButton btnSubTotal;
    private javax.swing.JButton btnUpdateProduct;
    private javax.swing.JButton btnUpdateUser;
    private javax.swing.JComboBox<String> cmbCatagory;
    private javax.swing.JComboBox<String> cmbDeleteProducts;
    private javax.swing.JComboBox<String> cmbDeleteUsers;
    private javax.swing.JComboBox<String> cmbReadProducts;
    private javax.swing.JComboBox<String> cmbReadUsers;
    private javax.swing.JComboBox<String> cmbSales;
    private javax.swing.JComboBox<String> cmbUpdateProducts;
    private javax.swing.JComboBox<String> cmbUpdateUsers;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JLabel lblAverage;
    private javax.swing.JLabel lblCatagory;
    private javax.swing.JLabel lblDeleteCatagory;
    private javax.swing.JLabel lblDeleteEmployeeNumber;
    private javax.swing.JLabel lblDeleteFirstName;
    private javax.swing.JLabel lblDeleteImageFilename;
    private javax.swing.JLabel lblDeleteLastName;
    private javax.swing.JLabel lblDeletePrice;
    private javax.swing.JLabel lblDeleteProductDescription;
    private javax.swing.JLabel lblDeleteProductName;
    private javax.swing.JLabel lblDeleteProducts;
    private javax.swing.JLabel lblDeleteRole;
    private javax.swing.JLabel lblDeleteScreenPosition;
    private javax.swing.JLabel lblDeleteUserId;
    private javax.swing.JLabel lblDeleteUsers;
    private javax.swing.JLabel lblEODEmployeeNumber;
    private javax.swing.JLabel lblEmployeeNumber;
    private javax.swing.JLabel lblFirstName;
    private javax.swing.JLabel lblImageFilename;
    private javax.swing.JLabel lblLastName;
    private javax.swing.JLabel lblMax;
    private javax.swing.JLabel lblMin;
    private javax.swing.JLabel lblOrderInfo1;
    private javax.swing.JLabel lblOrderInfo2;
    private javax.swing.JLabel lblOrderPrice1;
    private javax.swing.JLabel lblOrderProductDescription1;
    private javax.swing.JLabel lblOrderProductImage;
    private javax.swing.JLabel lblOrderProductName1;
    private javax.swing.JLabel lblPassword;
    private javax.swing.JLabel lblPrice;
    private javax.swing.JLabel lblProductDescription;
    private javax.swing.JLabel lblProductName;
    private javax.swing.JLabel lblQuantity;
    private javax.swing.JLabel lblReadCatagory;
    private javax.swing.JLabel lblReadEmployeeNumber;
    private javax.swing.JLabel lblReadFirstName;
    private javax.swing.JLabel lblReadImageFilename;
    private javax.swing.JLabel lblReadLastName;
    private javax.swing.JLabel lblReadPassword;
    private javax.swing.JLabel lblReadPrice;
    private javax.swing.JLabel lblReadProductDescription;
    private javax.swing.JLabel lblReadProductId;
    private javax.swing.JLabel lblReadProductName;
    private javax.swing.JLabel lblReadProducts;
    private javax.swing.JLabel lblReadRole;
    private javax.swing.JLabel lblReadScreenPosition;
    private javax.swing.JLabel lblReadUserId;
    private javax.swing.JLabel lblReadUsers;
    private javax.swing.JLabel lblRole;
    private javax.swing.JLabel lblRoleEx;
    private javax.swing.JLabel lblRoleEx1;
    private javax.swing.JLabel lblRoleEx4;
    private javax.swing.JLabel lblRoleEx5;
    private javax.swing.JLabel lblRoleEx6;
    private javax.swing.JLabel lblRoleEx7;
    private javax.swing.JLabel lblSaleValue;
    private javax.swing.JLabel lblSales;
    private javax.swing.JLabel lblScreenPosition;
    private javax.swing.JLabel lblSubTitle1;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JLabel lblTotal;
    private javax.swing.JLabel lblUpdateCatagory;
    private javax.swing.JLabel lblUpdateEmployeeNumber;
    private javax.swing.JLabel lblUpdateFirstName;
    private javax.swing.JLabel lblUpdateImageFilename;
    private javax.swing.JLabel lblUpdateLastName;
    private javax.swing.JLabel lblUpdatePassword;
    private javax.swing.JLabel lblUpdatePrice;
    private javax.swing.JLabel lblUpdateProductDescription;
    private javax.swing.JLabel lblUpdateProductName;
    private javax.swing.JLabel lblUpdateProducts;
    private javax.swing.JLabel lblUpdateReadCatagory;
    private javax.swing.JLabel lblUpdateReadEmployeeNumber;
    private javax.swing.JLabel lblUpdateReadFirstName;
    private javax.swing.JLabel lblUpdateReadImageFilename;
    private javax.swing.JLabel lblUpdateReadLastName;
    private javax.swing.JLabel lblUpdateReadPassword;
    private javax.swing.JLabel lblUpdateReadPrice;
    private javax.swing.JLabel lblUpdateReadProductDescription;
    private javax.swing.JLabel lblUpdateReadProductName;
    private javax.swing.JLabel lblUpdateReadRole;
    private javax.swing.JLabel lblUpdateReadScreenPosition;
    private javax.swing.JLabel lblUpdateRole;
    private javax.swing.JLabel lblUpdateScreenPosition;
    private javax.swing.JLabel lblUpdateUsers;
    private javax.swing.JLabel lblUser;
    private javax.swing.JPanel pnlCategories;
    private javax.swing.JPanel pnlCreateProducts;
    private javax.swing.JPanel pnlCreateUsers;
    private javax.swing.JTabbedPane pnlCrudProducts;
    private javax.swing.JTabbedPane pnlCrudUsers;
    private javax.swing.JPanel pnlDeleteProducts;
    private javax.swing.JPanel pnlDeleteUsers;
    private javax.swing.JPanel pnlEndOfDay;
    private javax.swing.JPanel pnlOrder;
    private javax.swing.JPanel pnlOrderProductImage;
    private javax.swing.JPanel pnlProducts;
    private javax.swing.JPanel pnlReadProducts;
    private javax.swing.JPanel pnlReadUsers;
    private javax.swing.JPanel pnlUpdateProducts;
    private javax.swing.JPanel pnlUpdateUsers;
    private javax.swing.JPanel pnlUsers;
    private javax.swing.JTabbedPane tabPanelMain;
    private javax.swing.JTextArea txtAreaCategoryProductDescription;
    private javax.swing.JTextArea txtAreaCheckout;
    private javax.swing.JTextArea txtAreaDeleteProductDescription;
    private javax.swing.JTextArea txtAreaOrderProductDescription;
    private javax.swing.JTextArea txtAreaProductDescription;
    private javax.swing.JTextArea txtAreaReadProductDescription;
    private javax.swing.JTextArea txtAreaSubTotal;
    private javax.swing.JTextArea txtAreaUpdateProductDescription;
    private javax.swing.JTextField txtAverage;
    private javax.swing.JTextField txtCatagory;
    private javax.swing.JTextField txtCategoryPrice;
    private javax.swing.JTextField txtCategoryProductName;
    private javax.swing.JTextField txtDeleteCatagory;
    private javax.swing.JTextField txtDeleteEmployeeNumber;
    private javax.swing.JTextField txtDeleteFirstname;
    private javax.swing.JTextField txtDeleteImageFileName;
    private javax.swing.JTextField txtDeleteLastName;
    private javax.swing.JTextField txtDeletePrice;
    private javax.swing.JTextField txtDeleteProductName;
    private javax.swing.JTextField txtDeleteRole;
    private javax.swing.JTextField txtDeleteScreenPosition;
    private javax.swing.JTextField txtDeleteUserId;
    private javax.swing.JTextField txtEODCustomersServed;
    private javax.swing.JTextField txtEODEmployeeNumber;
    private javax.swing.JTextField txtEmployeeNumber;
    private javax.swing.JTextField txtFirstname;
    private javax.swing.JFormattedTextField txtFormatEnterAmount;
    private javax.swing.JFormattedTextField txtFormatedEnterQuantity;
    private javax.swing.JTextField txtImageFileName;
    private javax.swing.JTextField txtLastName;
    private javax.swing.JTextField txtMax;
    private javax.swing.JTextField txtMin;
    private javax.swing.JTextField txtOrderPrice;
    private javax.swing.JTextField txtOrderProductName;
    private javax.swing.JTextField txtPassword;
    private javax.swing.JTextField txtPrice;
    private javax.swing.JTextField txtProductID;
    private javax.swing.JTextField txtProductName;
    private javax.swing.JTextField txtReadCatagory;
    private javax.swing.JTextField txtReadEmployeeNumber;
    private javax.swing.JTextField txtReadFirstname;
    private javax.swing.JTextField txtReadImageFileName;
    private javax.swing.JTextField txtReadLastName;
    private javax.swing.JTextField txtReadPassword;
    private javax.swing.JTextField txtReadPrice;
    private javax.swing.JTextField txtReadProductId;
    private javax.swing.JTextField txtReadProductName;
    private javax.swing.JTextField txtReadRole;
    private javax.swing.JTextField txtReadScreenPosition;
    private javax.swing.JTextField txtReadUserId;
    private javax.swing.JTextField txtRole;
    private javax.swing.JTextField txtSaleValue;
    private javax.swing.JTextField txtScreenPosition;
    private javax.swing.JTextField txtTotal;
    private javax.swing.JTextArea txtUpdateAreaReadProductDescription;
    private javax.swing.JTextField txtUpdateCatagory;
    private javax.swing.JTextField txtUpdateEmployeeNumber;
    private javax.swing.JTextField txtUpdateFirstname;
    private javax.swing.JTextField txtUpdateImageFileName;
    private javax.swing.JTextField txtUpdateLastName;
    private javax.swing.JTextField txtUpdatePassword;
    private javax.swing.JTextField txtUpdatePrice;
    private javax.swing.JTextField txtUpdateProductName;
    private javax.swing.JTextField txtUpdateReadCatagory;
    private javax.swing.JTextField txtUpdateReadEmployeeNumber;
    private javax.swing.JTextField txtUpdateReadFirstname;
    private javax.swing.JTextField txtUpdateReadImageFileName;
    private javax.swing.JTextField txtUpdateReadLastName;
    private javax.swing.JTextField txtUpdateReadPassword;
    private javax.swing.JTextField txtUpdateReadPrice;
    private javax.swing.JTextField txtUpdateReadProductName;
    private javax.swing.JTextField txtUpdateReadRole;
    private javax.swing.JTextField txtUpdateReadScreenPosition;
    private javax.swing.JTextField txtUpdateRole;
    private javax.swing.JTextField txtUpdateScreenPosition;
    private javax.swing.JTextField txtUpdateUserID;
    private javax.swing.JTextField txtUser;
    // End of variables declaration//GEN-END:variables

}